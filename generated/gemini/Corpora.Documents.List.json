{
  "moduleName": "Gemini / Corpora / Documents / List",
  "version": "0.0.0",
  "description": "Lists all `Document`s in a `Corpus`.",
  "keywords": [
    "ai",
    "google"
  ],
  "cacheMode": "always",
  "evalMode": "manual",
  "params": {
    "accessToken": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "OAuth access token."
      },
      "advanced": true,
      "hideValue": false
    },
    "apiKey": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "API key. Your API key identifies your project and provides you with\nAPI access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n"
      },
      "advanced": true,
      "hideValue": false
    },
    "$Xgafv": {
      "schema": {
        "type": "string",
        "enum": [
          "1",
          "2"
        ],
        "optional": true,
        "description": "V1 error format."
      },
      "advanced": true,
      "hideValue": false
    },
    "alt": {
      "schema": {
        "type": "string",
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "optional": true,
        "description": "Data format for response."
      },
      "advanced": true,
      "hideValue": false
    },
    "callback": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "JSONP"
      },
      "advanced": true,
      "hideValue": false
    },
    "fields": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "Selector specifying which fields to include in a partial response."
      },
      "advanced": true,
      "hideValue": false
    },
    "key": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "advanced": true,
      "hideValue": false
    },
    "oauthToken": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "OAuth 2.0 token for the current user."
      },
      "advanced": true,
      "hideValue": false
    },
    "prettyPrint": {
      "schema": {
        "type": "boolean",
        "optional": true,
        "description": "Returns response with indentations and line breaks."
      },
      "advanced": true,
      "hideValue": false
    },
    "quotaUser": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "advanced": true,
      "hideValue": false
    },
    "uploadProtocol": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "advanced": true,
      "hideValue": false
    },
    "uploadType": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "advanced": true,
      "hideValue": false
    },
    "parent": {
      "schema": {
        "type": "string",
        "description": "Required. The name of the `Corpus` containing `Document`s. Example: `corpora/my-corpus-123`"
      },
      "advanced": false,
      "hideValue": false
    },
    "pageSize": {
      "schema": {
        "type": "number",
        "optional": true,
        "description": "Optional. The maximum number of `Document`s to return (per page). The service may return fewer `Document`s. If unspecified, at most 10 `Document`s will be returned. The maximum size limit is 20 `Document`s per page."
      },
      "advanced": true,
      "hideValue": false
    },
    "pageToken": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "Optional. A page token, received from a previous `ListDocuments` call. Provide the `next_page_token` returned in the response as an argument to the next request to retrieve the next page. When paginating, all other parameters provided to `ListDocuments` must match the call that provided the page token."
      },
      "advanced": true,
      "hideValue": false
    }
  },
  "result": {
    "schema": {
      "type": "any"
    },
    "async": true
  },
  "attributes": {
    "externalDocs": "",
    "codeHash": "f7d938ef28ec1f1d27bd4756f3fab94aba30b95d50f4d4bcc0f0f85445a4835c"
  }
}