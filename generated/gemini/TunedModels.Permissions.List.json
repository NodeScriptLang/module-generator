{
  "moduleName": "Gemini / Tuned Models / Permissions / List",
  "version": "0.0.0",
  "description": "Lists permissions for the specific resource.",
  "keywords": [
    "ai",
    "google"
  ],
  "cacheMode": "always",
  "evalMode": "manual",
  "params": {
    "auth": {
      "schema": {
        "type": "string",
        "description": "Gemini API key.\n"
      },
      "advanced": false,
      "hideValue": false
    },
    "$Xgafv": {
      "schema": {
        "type": "string",
        "enum": [
          "1",
          "2"
        ],
        "optional": true,
        "description": "V1 error format."
      },
      "advanced": true,
      "hideValue": false
    },
    "accessToken": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "OAuth access token."
      },
      "advanced": true,
      "hideValue": false
    },
    "alt": {
      "schema": {
        "type": "string",
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "optional": true,
        "description": "Data format for response."
      },
      "advanced": true,
      "hideValue": false
    },
    "callback": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "JSONP"
      },
      "advanced": true,
      "hideValue": false
    },
    "fields": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "Selector specifying which fields to include in a partial response."
      },
      "advanced": true,
      "hideValue": false
    },
    "key": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "advanced": true,
      "hideValue": false
    },
    "oauthToken": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "OAuth 2.0 token for the current user."
      },
      "advanced": true,
      "hideValue": false
    },
    "prettyPrint": {
      "schema": {
        "type": "boolean",
        "optional": true,
        "description": "Returns response with indentations and line breaks."
      },
      "advanced": true,
      "hideValue": false
    },
    "quotaUser": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "advanced": true,
      "hideValue": false
    },
    "uploadProtocol": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "advanced": true,
      "hideValue": false
    },
    "uploadType": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "advanced": true,
      "hideValue": false
    },
    "parent": {
      "schema": {
        "type": "string",
        "description": "Required. The parent resource of the permissions. Formats: `tunedModels/{tuned_model}` `corpora/{corpus}`"
      },
      "advanced": false,
      "hideValue": false
    },
    "pageSize": {
      "schema": {
        "type": "number",
        "optional": true,
        "description": "Optional. The maximum number of `Permission`s to return (per page). The service may return fewer permissions. If unspecified, at most 10 permissions will be returned. This method returns at most 1000 permissions per page, even if you pass larger page_size."
      },
      "advanced": true,
      "hideValue": false
    },
    "pageToken": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "Optional. A page token, received from a previous `ListPermissions` call. Provide the `page_token` returned by one request as an argument to the next request to retrieve the next page. When paginating, all other parameters provided to `ListPermissions` must match the call that provided the page token."
      },
      "advanced": true,
      "hideValue": false
    }
  },
  "result": {
    "schema": {
      "type": "any"
    },
    "async": true
  },
  "attributes": {
    "externalDocs": "",
    "codeHash": "dcf492e1c9dbe109e9893f0da80e0d0820d085d006a18e3c26a31c727523116a"
  }
}