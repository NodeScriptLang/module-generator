{
  "moduleName": "GitHub / Git / Commit / Create",
  "version": "0.0.0",
  "description": "Creates a new Git [commit object](https://git-scm.com/book/en/v2/Git-Internals-Git-Objects).\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in the table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on their account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
  "keywords": [],
  "cacheMode": "always",
  "evalMode": "manual",
  "params": {
    "accessToken": {
      "schema": {
        "type": "any",
        "description": "GitHub Access Token"
      },
      "advanced": false,
      "hideValue": true
    },
    "owner": {
      "schema": {
        "type": "string",
        "description": "The account owner of the repository. The name is not case sensitive."
      },
      "advanced": false,
      "hideValue": false
    },
    "repo": {
      "schema": {
        "type": "string",
        "description": "The name of the repository without the `.git` extension. The name is not case sensitive."
      },
      "advanced": false,
      "hideValue": false
    },
    "message": {
      "schema": {
        "type": "string",
        "description": "The commit message"
      },
      "advanced": false,
      "hideValue": false
    },
    "tree": {
      "schema": {
        "type": "string",
        "description": "The SHA of the tree object this commit points to"
      },
      "advanced": false,
      "hideValue": false
    },
    "parents": {
      "schema": {
        "type": "array",
        "items": {
          "type": "any"
        },
        "optional": true,
        "description": "The full SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of more than one should be provided."
      },
      "advanced": true,
      "hideValue": false
    },
    "author": {
      "schema": {
        "type": "any",
        "optional": true,
        "description": "Information about the author of the commit. By default, the `author` will be the authenticated user and the current date. See the `author` and `committer` object below for details."
      },
      "advanced": true,
      "hideValue": true
    },
    "committer": {
      "schema": {
        "type": "any",
        "optional": true,
        "description": "Information about the person who is making the commit. By default, `committer` will use the information set in `author`. See the `author` and `committer` object below for details."
      },
      "advanced": true,
      "hideValue": true
    },
    "signature": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "The [PGP signature](https://en.wikipedia.org/wiki/Pretty_Good_Privacy) of the commit. GitHub adds the signature to the `gpgsig` header of the created commit. For a commit signature to be verifiable by Git or GitHub, it must be an ASCII-armored detached PGP signature over the string commit as it would be written to the object database. To pass a `signature` parameter, you need to first manually create a valid PGP signature, which can be complicated. You may find it easier to [use the command line](https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work) to create signed commits."
      },
      "advanced": true,
      "hideValue": false
    }
  },
  "result": {
    "schema": {
      "type": "any"
    },
    "async": true
  },
  "attributes": {
    "externalDocs": "https://docs.github.com/rest/git/commits#create-a-commit",
    "codeHash": "f780787bc6c095cd1659bd132cf451197a6d698a0c3d6c2722fc593decfdf92e"
  }
}