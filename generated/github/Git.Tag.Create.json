{
  "moduleName": "GitHub / Git / Tag / Create",
  "version": "0.0.0",
  "description": "Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then [create](https://docs.github.com/rest/git/refs#create-a-reference) the `refs/tags/[tag]` reference. If you want to create a lightweight tag, you only have to [create](https://docs.github.com/rest/git/refs#create-a-reference) the tag reference - this call would be unnecessary.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on their account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
  "keywords": [],
  "cacheMode": "always",
  "evalMode": "manual",
  "params": {
    "accessToken": {
      "schema": {
        "type": "any",
        "description": "GitHub Access Token"
      },
      "advanced": false,
      "hideValue": true
    },
    "owner": {
      "schema": {
        "type": "string",
        "description": "The account owner of the repository. The name is not case sensitive."
      },
      "advanced": false,
      "hideValue": false
    },
    "repo": {
      "schema": {
        "type": "string",
        "description": "The name of the repository without the `.git` extension. The name is not case sensitive."
      },
      "advanced": false,
      "hideValue": false
    },
    "tag": {
      "schema": {
        "type": "string",
        "description": "The tag's name. This is typically a version (e.g., \"v0.0.1\")."
      },
      "advanced": false,
      "hideValue": false
    },
    "message": {
      "schema": {
        "type": "string",
        "description": "The tag message."
      },
      "advanced": false,
      "hideValue": false
    },
    "object": {
      "schema": {
        "type": "string",
        "description": "The SHA of the git object this is tagging."
      },
      "advanced": false,
      "hideValue": false
    },
    "type": {
      "schema": {
        "type": "string",
        "enum": [
          "commit",
          "tree",
          "blob"
        ],
        "description": "The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`."
      },
      "advanced": false,
      "hideValue": false
    },
    "tagger": {
      "schema": {
        "type": "any",
        "optional": true,
        "description": "An object with information about the individual creating the tag."
      },
      "advanced": true,
      "hideValue": true
    }
  },
  "result": {
    "schema": {
      "type": "any"
    },
    "async": true
  },
  "attributes": {
    "externalDocs": "https://docs.github.com/rest/git/tags#create-a-tag-object",
    "codeHash": "98a050b6bc38b3f309d3b388091383f6e478bcd43a1766db9a7d4d4735bfad2a"
  }
}