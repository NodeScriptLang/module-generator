{
  "moduleName": "GitHub / Issues / Org / List",
  "version": "0.0.0",
  "description": "List issues in an organization assigned to the authenticated user.\n\n> [!NOTE]\n> GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://docs.github.com/rest/pulls/pulls#list-pull-requests)\" endpoint.\n\nThis endpoint supports the following custom media types. For more information, see \"[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types).\"\n\n- **`application/vnd.github.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.\n- **`application/vnd.github.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.\n- **`application/vnd.github.html+json`**: Returns HTML rendered from the body's markdown. Response will include `body_html`.\n- **`application/vnd.github.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.",
  "keywords": [],
  "cacheMode": "always",
  "evalMode": "manual",
  "params": {
    "accessToken": {
      "schema": {
        "type": "any",
        "description": "GitHub Access Token"
      },
      "advanced": false,
      "hideValue": true
    },
    "org": {
      "schema": {
        "type": "string",
        "description": "The organization name. The name is not case sensitive."
      },
      "advanced": false,
      "hideValue": false
    },
    "filter": {
      "schema": {
        "type": "string",
        "default": "assigned",
        "enum": [
          "assigned",
          "created",
          "mentioned",
          "subscribed",
          "repos",
          "all"
        ],
        "optional": true,
        "description": "Indicates which sorts of issues to return. `assigned` means issues assigned to you. `created` means issues created by you. `mentioned` means issues mentioning you. `subscribed` means issues you're subscribed to updates for. `all` or `repos` means all issues you can see, regardless of participation or creation."
      },
      "advanced": true,
      "hideValue": false
    },
    "state": {
      "schema": {
        "type": "string",
        "default": "open",
        "enum": [
          "open",
          "closed",
          "all"
        ],
        "optional": true,
        "description": "Indicates the state of the issues to return."
      },
      "advanced": true,
      "hideValue": false
    },
    "labels": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "A list of comma separated label names. Example: `bug,ui,@high`"
      },
      "advanced": true,
      "hideValue": false
    },
    "sort": {
      "schema": {
        "type": "string",
        "default": "created",
        "enum": [
          "created",
          "updated",
          "comments"
        ],
        "optional": true,
        "description": "What to sort results by."
      },
      "advanced": true,
      "hideValue": false
    },
    "direction": {
      "schema": {
        "type": "string",
        "default": "desc",
        "enum": [
          "asc",
          "desc"
        ],
        "optional": true,
        "description": "The direction to sort the results by."
      },
      "advanced": true,
      "hideValue": false
    },
    "since": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "Only show results that were last updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
      },
      "advanced": true,
      "hideValue": false
    },
    "perPage": {
      "schema": {
        "type": "number",
        "default": "30",
        "optional": true,
        "description": "The number of results per page (max 100). For more information, see \"[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\""
      },
      "advanced": true,
      "hideValue": false
    },
    "page": {
      "schema": {
        "type": "number",
        "default": "1",
        "optional": true,
        "description": "The page number of the results to fetch. For more information, see \"[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api).\""
      },
      "advanced": true,
      "hideValue": false
    }
  },
  "result": {
    "schema": {
      "type": "any"
    },
    "async": true
  },
  "attributes": {
    "externalDocs": "https://docs.github.com/rest/issues/issues#list-organization-issues-assigned-to-the-authenticated-user",
    "codeHash": "855c79bebd32ec25924fb94fe9168b5a05114f91ef9c854ea0a67a7805d06ab0"
  }
}