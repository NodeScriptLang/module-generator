{
  "moduleName": "GitHub / Repos / Authenticated User / Create",
  "version": "0.0.0",
  "description": "Creates a new repository for the authenticated user.\n\nOAuth app tokens and personal access tokens (classic) need the `public_repo` or `repo` scope to create a public repository, and `repo` scope to create a private repository.",
  "keywords": [],
  "cacheMode": "always",
  "evalMode": "manual",
  "params": {
    "accessToken": {
      "schema": {
        "type": "any",
        "description": "GitHub Access Token"
      },
      "advanced": false,
      "hideValue": true
    },
    "name": {
      "schema": {
        "type": "string",
        "description": "The name of the repository."
      },
      "advanced": false,
      "hideValue": false
    },
    "description": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "A short description of the repository."
      },
      "advanced": true,
      "hideValue": false
    },
    "homepage": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "A URL with more information about the repository."
      },
      "advanced": true,
      "hideValue": false
    },
    "private": {
      "schema": {
        "type": "boolean",
        "default": "false",
        "optional": true,
        "description": "Whether the repository is private."
      },
      "advanced": true,
      "hideValue": false
    },
    "hasIssues": {
      "schema": {
        "type": "boolean",
        "default": "true",
        "optional": true,
        "description": "Whether issues are enabled."
      },
      "advanced": true,
      "hideValue": false
    },
    "hasProjects": {
      "schema": {
        "type": "boolean",
        "default": "true",
        "optional": true,
        "description": "Whether projects are enabled."
      },
      "advanced": true,
      "hideValue": false
    },
    "hasWiki": {
      "schema": {
        "type": "boolean",
        "default": "true",
        "optional": true,
        "description": "Whether the wiki is enabled."
      },
      "advanced": true,
      "hideValue": false
    },
    "hasDiscussions": {
      "schema": {
        "type": "boolean",
        "default": "false",
        "optional": true,
        "description": "Whether discussions are enabled."
      },
      "advanced": true,
      "hideValue": false
    },
    "teamId": {
      "schema": {
        "type": "number",
        "optional": true,
        "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization."
      },
      "advanced": true,
      "hideValue": false
    },
    "autoInit": {
      "schema": {
        "type": "boolean",
        "default": "false",
        "optional": true,
        "description": "Whether the repository is initialized with a minimal README."
      },
      "advanced": true,
      "hideValue": false
    },
    "gitignoreTemplate": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "The desired language or platform to apply to the .gitignore."
      },
      "advanced": true,
      "hideValue": false
    },
    "licenseTemplate": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "The license keyword of the open source license for this repository."
      },
      "advanced": true,
      "hideValue": false
    },
    "allowSquashMerge": {
      "schema": {
        "type": "boolean",
        "default": "true",
        "optional": true,
        "description": "Whether to allow squash merges for pull requests."
      },
      "advanced": true,
      "hideValue": false
    },
    "allowMergeCommit": {
      "schema": {
        "type": "boolean",
        "default": "true",
        "optional": true,
        "description": "Whether to allow merge commits for pull requests."
      },
      "advanced": true,
      "hideValue": false
    },
    "allowRebaseMerge": {
      "schema": {
        "type": "boolean",
        "default": "true",
        "optional": true,
        "description": "Whether to allow rebase merges for pull requests."
      },
      "advanced": true,
      "hideValue": false
    },
    "allowAutoMerge": {
      "schema": {
        "type": "boolean",
        "default": "false",
        "optional": true,
        "description": "Whether to allow Auto-merge to be used on pull requests."
      },
      "advanced": true,
      "hideValue": false
    },
    "deleteBranchOnMerge": {
      "schema": {
        "type": "boolean",
        "default": "false",
        "optional": true,
        "description": "Whether to delete head branches when pull requests are merged"
      },
      "advanced": true,
      "hideValue": false
    },
    "squashMergeCommitTitle": {
      "schema": {
        "type": "string",
        "enum": [
          "PR_TITLE",
          "COMMIT_OR_PR_TITLE"
        ],
        "optional": true,
        "description": "Required when using `squash_merge_commit_message`.\n\nThe default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit)."
      },
      "advanced": true,
      "hideValue": false
    },
    "squashMergeCommitMessage": {
      "schema": {
        "type": "string",
        "enum": [
          "PR_BODY",
          "COMMIT_MESSAGES",
          "BLANK"
        ],
        "optional": true,
        "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message."
      },
      "advanced": true,
      "hideValue": false
    },
    "mergeCommitTitle": {
      "schema": {
        "type": "string",
        "enum": [
          "PR_TITLE",
          "MERGE_MESSAGE"
        ],
        "optional": true,
        "description": "Required when using `merge_commit_message`.\n\nThe default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name)."
      },
      "advanced": true,
      "hideValue": false
    },
    "mergeCommitMessage": {
      "schema": {
        "type": "string",
        "enum": [
          "PR_BODY",
          "PR_TITLE",
          "BLANK"
        ],
        "optional": true,
        "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message."
      },
      "advanced": true,
      "hideValue": false
    },
    "hasDownloads": {
      "schema": {
        "type": "boolean",
        "default": "true",
        "optional": true,
        "description": "Whether downloads are enabled."
      },
      "advanced": true,
      "hideValue": false
    },
    "isTemplate": {
      "schema": {
        "type": "boolean",
        "default": "false",
        "optional": true,
        "description": "Whether this repository acts as a template that can be used to generate new repositories."
      },
      "advanced": true,
      "hideValue": false
    }
  },
  "result": {
    "schema": {
      "type": "any"
    },
    "async": true
  },
  "attributes": {
    "externalDocs": "https://docs.github.com/rest/repos/repos#create-a-repository-for-the-authenticated-user",
    "codeHash": "b5a5529a5970997f56a10df8d5058b03c3dd815941e731509e005c75ec3ea5ed"
  }
}