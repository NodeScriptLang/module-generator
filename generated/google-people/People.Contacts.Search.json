{
  "moduleName": "Google People / People / Contacts / Search",
  "version": "0.0.0",
  "description": "Provides a list of contacts in the authenticated user's grouped contacts that matches the search query. The query matches on a contact's `names`, `nickNames`, `emailAddresses`, `phoneNumbers`, and `organizations` fields that are from the CONTACT source. **IMPORTANT**: Before searching, clients should send a warmup request with an empty query to update the cache. See https://developers.google.com/people/v1/contacts#search_the_users_contacts",
  "keywords": [],
  "cacheMode": "always",
  "evalMode": "manual",
  "params": {
    "accessToken": {
      "schema": {
        "type": "any",
        "optional": true,
        "description": "OAuth 2 access token. Most APIs require `https://www.googleapis.com/auth/contacts` scope. Google Auth / Service Account Token can be used to obtain a valid access token."
      },
      "advanced": false,
      "hideValue": true
    },
    "apiKey": {
      "schema": {
        "type": "any",
        "optional": true,
        "description": "API key can be generated in Google Developer Console in APIs & Services section. Leave blank if OAuth access token is used."
      },
      "advanced": true,
      "hideValue": true
    },
    "fields": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "Selector specifying which fields to include in a partial response."
      },
      "advanced": true,
      "hideValue": false
    },
    "pageSize": {
      "schema": {
        "type": "number",
        "optional": true,
        "description": "Optional. The number of results to return. Defaults to 10 if field is not set, or set to 0. Values greater than 30 will be capped to 30."
      },
      "advanced": true,
      "hideValue": false
    },
    "query": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "Required. The plain-text query for the request. The query is used to match prefix phrases of the fields on a person. For example, a person with name \"foo name\" matches queries such as \"f\", \"fo\", \"foo\", \"foo n\", \"nam\", etc., but not \"oo n\"."
      },
      "advanced": true,
      "hideValue": false
    },
    "readMask": {
      "schema": {
        "type": "string",
        "description": "Required. A field mask to restrict which fields on each person are returned. Multiple fields can be specified by separating them with commas. Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls * clientData * coverPhotos * emailAddresses * events * externalIds * genders * imClients * interests * locales * locations * memberships * metadata * miscKeywords * names * nicknames * occupations * organizations * phoneNumbers * photos * relations * sipAddresses * skills * urls * userDefined"
      },
      "advanced": false,
      "hideValue": false
    },
    "sources": {
      "schema": {
        "type": "array",
        "items": {
          "type": "any"
        },
        "optional": true,
        "description": "Optional. A mask of what source types to return. Defaults to READ_SOURCE_TYPE_CONTACT if not set."
      },
      "advanced": true,
      "hideValue": false
    }
  },
  "result": {
    "schema": {
      "type": "any"
    },
    "async": true
  },
  "attributes": {
    "externalDocs": "https://developers.google.com/people/api/rest",
    "codeHash": "499ddebf47effb3bd5dd359b9ce2baaef7e5805227de83a96b8e1a06cb34c93a"
  }
}