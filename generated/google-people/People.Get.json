{
  "moduleName": "Google People / People / Get",
  "version": "0.0.0",
  "description": "Provides information about a person by specifying a resource name. Use `people/me` to indicate the authenticated user. The request returns a 400 error if 'personFields' is not specified.",
  "keywords": [],
  "cacheMode": "always",
  "evalMode": "manual",
  "params": {
    "accessToken": {
      "schema": {
        "type": "any",
        "optional": true,
        "description": "OAuth 2 access token. Most APIs require `https://www.googleapis.com/auth/contacts` scope. Google Auth / Service Account Token can be used to obtain a valid access token."
      },
      "advanced": false,
      "hideValue": true
    },
    "apiKey": {
      "schema": {
        "type": "any",
        "optional": true,
        "description": "API key can be generated in Google Developer Console in APIs & Services section. Leave blank if OAuth access token is used."
      },
      "advanced": true,
      "hideValue": true
    },
    "fields": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "Selector specifying which fields to include in a partial response."
      },
      "advanced": true,
      "hideValue": false
    },
    "resourceName": {
      "schema": {
        "type": "string",
        "description": "Required. The resource name of the person to provide information about. - To get information about the authenticated user, specify `people/me`. - To get information about a google account, specify `people/{account_id}`. - To get information about a contact, specify the resource name that identifies the contact as returned by `people.connections.list`."
      },
      "advanced": false,
      "hideValue": false
    },
    "personFields": {
      "schema": {
        "type": "string",
        "description": "Required. A field mask to restrict which fields on the person are returned. Multiple fields can be specified by separating them with commas. Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls * clientData * coverPhotos * emailAddresses * events * externalIds * genders * imClients * interests * locales * locations * memberships * metadata * miscKeywords * names * nicknames * occupations * organizations * phoneNumbers * photos * relations * sipAddresses * skills * urls * userDefined"
      },
      "advanced": false,
      "hideValue": false
    },
    "requestMaskIncludeField": {
      "schema": {
        "type": "string",
        "description": "Required. Comma-separated list of person fields to be included in the response. Each path should start with `person.`: for example, `person.names` or `person.photos`."
      },
      "advanced": false,
      "hideValue": false
    },
    "sources": {
      "schema": {
        "type": "array",
        "items": {
          "type": "any"
        },
        "optional": true,
        "description": "Optional. A mask of what source types to return. Defaults to READ_SOURCE_TYPE_PROFILE and READ_SOURCE_TYPE_CONTACT if not set."
      },
      "advanced": true,
      "hideValue": false
    }
  },
  "result": {
    "schema": {
      "type": "any"
    },
    "async": true
  },
  "attributes": {
    "externalDocs": "https://developers.google.com/people/api/rest",
    "codeHash": "d1758d41152dc98caacc60bc288ae86e79110a9fd36d7e3ac0034b657c4ff65a"
  }
}