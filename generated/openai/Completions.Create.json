{
  "moduleName": "OpenAI / Completions / Create",
  "version": "0.0.0",
  "description": "Creates a completion for the provided prompt and parameters.",
  "keywords": [],
  "cacheMode": "always",
  "evalMode": "manual",
  "params": {
    "auth": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "OpenAI API key.\n"
      },
      "advanced": false,
      "hideValue": false
    },
    "betaAccess": {
      "schema": {
        "type": "string",
        "optional": false,
        "default": "assistants=v2",
        "description": "Adds OpenAI-Beta for access to new and experimental features."
      },
      "advanced": true,
      "hideValue": false
    },
    "model": {
      "schema": {
        "type": "string",
        "default": "gpt-4o",
        "optional": true,
        "description": "ID of the model to use.\n"
      },
      "advanced": false,
      "hideValue": false
    },
    "prompt": {
      "schema": {
        "type": "any",
        "optional": true,
        "description": "The prompt(s) to generate completions for, encoded as a string, array of strings, array of tokens, or array of token arrays.\nNote that <|endoftext|> is the document separator that the model sees during training, so if a prompt is not specified the model will generate as if from the beginning of a new document.\n"
      },
      "advanced": false,
      "hideValue": true
    },
    "bestOf": {
      "schema": {
        "type": "number",
        "default": "1",
        "minimum": 0,
        "maximum": 20,
        "optional": true,
        "description": "Generates `best_of` completions server-side and returns the \"best\" (the one with the highest log probability per token). Results cannot be streamed.\n\nWhen used with `n`, `best_of` controls the number of candidate completions and `n` specifies how many to return â€“ `best_of` must be greater than `n`.\n\n**Note:** Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`.\n"
      },
      "advanced": true,
      "hideValue": false
    },
    "echo": {
      "schema": {
        "type": "boolean",
        "default": "false",
        "optional": true,
        "description": "Echo back the prompt in addition to the completion\n"
      },
      "advanced": true,
      "hideValue": false
    },
    "frequencyPenalty": {
      "schema": {
        "type": "number",
        "default": "0",
        "minimum": -2,
        "maximum": 2,
        "optional": true,
        "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.\n"
      },
      "advanced": true,
      "hideValue": false
    },
    "logitBias": {
      "schema": {
        "type": "any",
        "optional": true,
        "description": "Modify the likelihood of specified tokens appearing in the completion.\nAccepts a JSON object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use tokenizer to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.\nAs an example, you can pass `{\"50256\": -100}` to prevent the <|endoftext|> token from being generated.\n"
      },
      "advanced": true,
      "hideValue": true
    },
    "logprobs": {
      "schema": {
        "type": "number",
        "minimum": 0,
        "maximum": 5,
        "optional": true,
        "description": "Include the log probabilities on the `logprobs` most likely output tokens, as well the chosen tokens. For example, if `logprobs` is 5, the API will return a list of the 5 most likely tokens. The API will always return the `logprob` of the sampled token, so there may be up to `logprobs+1` elements in the response. The maximum value for `logprobs` is 5.\n"
      },
      "advanced": true,
      "hideValue": false
    },
    "maxTokens": {
      "schema": {
        "type": "number",
        "default": "16",
        "minimum": 0,
        "optional": true,
        "description": "The maximum number of tikens that can be generated in the completion. The token count of your prompt plus `max_tokens` cannot exceed the model's context length.\n"
      },
      "advanced": true,
      "hideValue": false
    },
    "n": {
      "schema": {
        "type": "number",
        "default": "1",
        "minimum": 1,
        "maximum": 128,
        "optional": true,
        "description": "How many completions to generate for each prompt. **Note:** Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`.\n"
      },
      "advanced": true,
      "hideValue": false
    },
    "presencePenalty": {
      "schema": {
        "type": "number",
        "default": "0",
        "minimum": -2,
        "maximum": 2,
        "optional": true,
        "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.\n"
      },
      "advanced": true,
      "hideValue": false
    },
    "seed": {
      "schema": {
        "type": "number",
        "minimum": -9223372036854776000,
        "maximum": 9223372036854776000,
        "optional": true,
        "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same `seed` and parameters should return the same result.\n\nDeterminism is not guaranteed, and you should refer to the `system_fingerprint` response parameter to monitor changes in the backend.\n"
      },
      "advanced": true,
      "hideValue": false
    },
    "stop": {
      "schema": {
        "type": "any",
        "optional": true,
        "description": "Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence.\n"
      },
      "advanced": true,
      "hideValue": true
    },
    "suffix": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "The suffix that comes after a completion of inserted text.\n\nThis parameter is only supported for `gpt-3.5-turbo-instruct`.\n"
      },
      "advanced": true,
      "hideValue": false
    },
    "temperature": {
      "schema": {
        "type": "number",
        "default": "1",
        "minimum": 0,
        "maximum": 2,
        "optional": true,
        "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or `top_p` but not both.\n"
      },
      "advanced": true,
      "hideValue": false
    },
    "topP": {
      "schema": {
        "type": "number",
        "default": "1",
        "minimum": 0,
        "maximum": 1,
        "optional": true,
        "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or `temperature` but not both.\n"
      },
      "advanced": true,
      "hideValue": false
    },
    "user": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.\n"
      },
      "advanced": true,
      "hideValue": false
    }
  },
  "result": {
    "schema": {
      "type": "any"
    },
    "async": true
  },
  "attributes": {
    "externalDocs": "https://platform.openai.com/docs/api-reference",
    "codeHash": "254d0e877e9818ab9d5912640e289b30fdacf6ca408358d391940a5008646bd3"
  }
}