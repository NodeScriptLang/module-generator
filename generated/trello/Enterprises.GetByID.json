{
  "moduleName": "Trello / Enterprises / Get By ID",
  "version": "0.0.0",
  "description": "Get an enterprise by its ID.",
  "keywords": [],
  "cacheMode": "always",
  "evalMode": "manual",
  "params": {
    "apiKey": {
      "schema": {
        "type": "string",
        "description": "Trello Api Key - created in the Trello console."
      },
      "advanced": false,
      "hideValue": false
    },
    "accessToken": {
      "schema": {
        "type": "string",
        "description": "Trello Access Token - created in the Trello console."
      },
      "advanced": false,
      "hideValue": false
    },
    "id": {
      "schema": {
        "type": "string",
        "description": "ID of the enterprise to retrieve."
      },
      "advanced": false,
      "hideValue": false
    },
    "fields": {
      "schema": {
        "type": "string",
        "default": "all",
        "optional": true,
        "description": "Comma-separated list of: `id`, `name`, `displayName`, `prefs`, `ssoActivationFailed`, `idAdmins`, `idMembers` (Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data. Read the SCIM documentation [here]() for more information on filtering), `idOrganizations`, `products`, `userTypes`, `idMembers`, `idOrganizations`"
      },
      "advanced": true,
      "hideValue": false
    },
    "members": {
      "schema": {
        "type": "string",
        "default": "none",
        "optional": true,
        "description": "One of: `none`, `normal`, `admins`, `owners`, `all`"
      },
      "advanced": true,
      "hideValue": false
    },
    "memberFields": {
      "schema": {
        "type": "string",
        "default": "avatarHash, fullName, initials, username",
        "optional": true,
        "description": "One of: `avatarHash`, `fullName`, `initials`, `username`"
      },
      "advanced": true,
      "hideValue": false
    },
    "memberFilter": {
      "schema": {
        "type": "string",
        "default": "none",
        "optional": true,
        "description": "Pass a [SCIM-style query](/cloud/trello/scim/) to filter members. This takes precedence over the all/normal/admins value of members. If any of the member_* args are set, the member array will be paginated."
      },
      "advanced": true,
      "hideValue": false
    },
    "memberSort": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data."
      },
      "advanced": true,
      "hideValue": false
    },
    "memberSortBy": {
      "schema": {
        "type": "string",
        "default": "none",
        "optional": true,
        "description": "Deprecated: Please use member_sort. This parameter expects a [SCIM-style sorting value](/cloud/trello/scim/). Note that the members array returned will be paginated if `members` is `normal` or `admins`. Pagination can be controlled with `member_startIndex`, etc, and the API response's header will contain the total count and pagination state."
      },
      "advanced": true,
      "hideValue": false
    },
    "memberSortOrder": {
      "schema": {
        "type": "string",
        "default": "id",
        "optional": true,
        "description": "Deprecated: Please use member_sort. One of: `ascending`, `descending`, `asc`, `desc`"
      },
      "advanced": true,
      "hideValue": false
    },
    "memberStartIndex": {
      "schema": {
        "type": "number",
        "default": "1",
        "optional": true,
        "description": "Any integer between 0 and 100."
      },
      "advanced": true,
      "hideValue": false
    },
    "memberCount": {
      "schema": {
        "type": "number",
        "default": "10",
        "optional": true,
        "description": "0 to 100"
      },
      "advanced": true,
      "hideValue": false
    },
    "organizations": {
      "schema": {
        "type": "string",
        "default": "none",
        "optional": true,
        "description": "One of: `none`, `members`, `public`, `all`"
      },
      "advanced": true,
      "hideValue": false
    },
    "organizationFields": {
      "schema": {
        "type": "string",
        "default": "none",
        "optional": true,
        "description": "Any valid value that the [nested organization field resource]() accepts."
      },
      "advanced": true,
      "hideValue": false
    },
    "organizationPaidAccounts": {
      "schema": {
        "type": "boolean",
        "default": "false",
        "optional": true,
        "description": "Whether or not to include paid account information in the returned workspace objects"
      },
      "advanced": true,
      "hideValue": false
    },
    "organizationMemberships": {
      "schema": {
        "type": "string",
        "default": "none",
        "optional": true,
        "description": "Comma-seperated list of: `me`, `normal`, `admin`, `active`, `deactivated`"
      },
      "advanced": true,
      "hideValue": false
    }
  },
  "result": {
    "schema": {
      "type": "any"
    },
    "async": true
  },
  "attributes": {
    "externalDocs": "https://developer.atlassian.com/cloud/trello/rest",
    "codeHash": "82c7e0d89e89cebfeeae4491d6ca2007f7546e96d04630019c8bd4e8e3048914"
  }
}