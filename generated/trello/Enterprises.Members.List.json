{
  "moduleName": "Trello / Enterprises / Members / List",
  "version": "0.0.0",
  "description": "Get the members of an enterprise.",
  "keywords": [],
  "cacheMode": "always",
  "evalMode": "manual",
  "params": {
    "apiKey": {
      "schema": {
        "type": "string",
        "description": "Trello Api Key - created in the Trello console."
      },
      "advanced": false,
      "hideValue": false
    },
    "accessToken": {
      "schema": {
        "type": "string",
        "description": "Trello Access Token - created in the Trello console."
      },
      "advanced": false,
      "hideValue": false
    },
    "id": {
      "schema": {
        "type": "string",
        "description": "ID of the Enterprise to retrieve."
      },
      "advanced": false,
      "hideValue": false
    },
    "fields": {
      "schema": {
        "type": "string",
        "default": "avatarHash, fullName, initials, username",
        "optional": true,
        "description": "A comma-seperated list of valid [member fields](/cloud/trello/guides/rest-api/object-definitions/#member-object)."
      },
      "advanced": true,
      "hideValue": false
    },
    "filter": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "Pass a [SCIM-style query](/cloud/trello/scim/) to filter members. This takes precedence over the all/normal/admins value of members. If any of the below member_* args are set, the member array will be paginated."
      },
      "advanced": true,
      "hideValue": false
    },
    "sort": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data."
      },
      "advanced": true,
      "hideValue": false
    },
    "sortBy": {
      "schema": {
        "type": "string",
        "optional": true,
        "description": "Deprecated: Please use `sort` instead. This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data."
      },
      "advanced": true,
      "hideValue": false
    },
    "sortOrder": {
      "schema": {
        "type": "string",
        "enum": [
          "ascending",
          "descending",
          "asc",
          "desc",
          ""
        ],
        "optional": true,
        "description": "Deprecated: Please use `sort` instead. One of: `ascending`, `descending`, `asc`, `desc`."
      },
      "advanced": true,
      "hideValue": false
    },
    "startIndex": {
      "schema": {
        "type": "number",
        "minimum": 0,
        "maximum": 9999,
        "optional": true,
        "description": "Any integer between 0 and 9999."
      },
      "advanced": true,
      "hideValue": false
    },
    "count": {
      "schema": {
        "type": "string",
        "default": "none",
        "optional": true,
        "description": "[SCIM-style filter](/cloud/trello/scim/)."
      },
      "advanced": true,
      "hideValue": false
    },
    "organizationFields": {
      "schema": {
        "type": "string",
        "default": "displayName",
        "optional": true,
        "description": "Any valid value that the [nested organization field resource](/cloud/trello/guides/rest-api/nested-resources/) accepts."
      },
      "advanced": true,
      "hideValue": false
    },
    "boardFields": {
      "schema": {
        "type": "string",
        "default": "name",
        "optional": true,
        "description": "Any valid value that the [nested board resource](/cloud/trello/guides/rest-api/nested-resources/) accepts."
      },
      "advanced": true,
      "hideValue": false
    }
  },
  "result": {
    "schema": {
      "type": "any"
    },
    "async": true
  },
  "attributes": {
    "externalDocs": "https://developer.atlassian.com/cloud/trello/rest",
    "codeHash": "fc67c22e875f22a36d2c29ff330dc1d494c96956ca26a0b154d9c35e6da93912"
  }
}