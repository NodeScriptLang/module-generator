id: google-drive
displayName: Google Drive
workspaceId:
  development: "7ODoihe61yUyQWvj"
  production: "8KDDtolL7PBUuQrY"
baseUrl: https://www.googleapis.com/drive/v3
description: Manages files in Drive including uploading, downloading, searching,
  detecting changes, and updating sharing permissions.
commonParams:
  - paramName: accessToken
    paramKey: Authorization
    prefix: Bearer
    in: header
    description: OAuth 2 access token. Most APIs require `https://www.googleapis.com/auth/drive` scope. Google Auth / Service Account Token can be used to obtain a valid access token.
    required: false
    advanced: false
  - paramName: apiKey
    paramKey: key
    in: query
    description: API key can be generated in Google Developer Console in APIs & Services section. Leave blank if OAuth access token is used.
    required: false
modules:
  - moduleName: About / Get
    method: get
    path: /about
    description: Gets information about the user, the user's Drive, and system capabilities.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: true
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
  - moduleName: Changes / List
    method: get
    path: /changes
    description: Lists the changes for a user or shared drive.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: pageToken
        description: The token for continuing a previous list request on the next page.
          This should be set to the value of 'nextPageToken' from the previous
          response or to the response from the getStartPageToken method.
        paramKey: pageToken
        in: query
        schema:
          type: string
        required: true
      - paramName: driveId
        description: The shared drive from which changes are returned. If specified the
          change IDs will be reflective of the shared drive; use the combined
          drive ID and change ID as an identifier.
        paramKey: driveId
        in: query
        schema:
          type: string
        required: false
      - paramName: includeCorpusRemovals
        description: Whether changes should include the file resource if the file is
          still accessible by the user at the time of the request, even when a
          file was removed from the list of changes and there will be no further
          change entries for this file.
        paramKey: includeCorpusRemovals
        in: query
        schema:
          type: boolean
        required: false
      - paramName: includeItemsFromAllDrives
        description: Whether both My Drive and shared drive items should be included in
          results.
        paramKey: includeItemsFromAllDrives
        in: query
        schema:
          type: boolean
        required: false
      - paramName: includeLabels
        description: A comma-separated list of IDs of labels to include in the labelInfo
          part of the response.
        paramKey: includeLabels
        in: query
        schema:
          type: string
        required: false
      - paramName: includePermissionsForView
        description: Specifies which additional view's permissions to include in the
          response. Only 'published' is supported.
        paramKey: includePermissionsForView
        in: query
        schema:
          type: string
        required: false
      - paramName: includeRemoved
        description: Whether to include changes indicating that items have been removed
          from the list of changes, for example by deletion or loss of access.
        paramKey: includeRemoved
        in: query
        schema:
          type: boolean
        required: false
      - paramName: pageSize
        description: The maximum number of changes to return per page.
        paramKey: pageSize
        in: query
        schema:
          type: number
          minimum: 1
          maximum: 1000
        required: false
      - paramName: restrictToMyDrive
        description: Whether to restrict the results to changes inside the My Drive
          hierarchy. This omits changes to files such as those in the
          Application Data folder or shared files which have not been added to
          My Drive.
        paramKey: restrictToMyDrive
        in: query
        schema:
          type: boolean
        required: false
      - paramName: spaces
        description: A comma-separated list of spaces to query within the corpora.
          Supported values are 'drive' and 'appDataFolder'.
        paramKey: spaces
        in: query
        schema:
          type: string
        required: false
      - paramName: supportsAllDrives
        description: Whether the requesting application supports both My Drives and
          shared drives.
        paramKey: supportsAllDrives
        in: query
        schema:
          type: boolean
        required: false
  - moduleName: Changes / Get Start Page Token
    method: get
    path: /changes/startPageToken
    description: Gets the starting pageToken for listing future changes.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: driveId
        description: The ID of the shared drive for which the starting pageToken for
          listing future changes from that shared drive is returned.
        paramKey: driveId
        in: query
        schema:
          type: string
        required: false
      - paramName: supportsAllDrives
        description: Whether the requesting application supports both My Drives and
          shared drives.
        paramKey: supportsAllDrives
        in: query
        schema:
          type: boolean
        required: false
  - moduleName: Changes / Watch
    method: post
    path: /changes/watch
    description: Subscribes to changes for a user. To use this method, you must
      include the pageToken query parameter.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: pageToken
        description: The token for continuing a previous list request on the next page.
          This should be set to the value of 'nextPageToken' from the previous
          response or to the response from the getStartPageToken method.
        paramKey: pageToken
        in: query
        schema:
          type: string
        required: true
      - paramName: driveId
        description: The shared drive from which changes are returned. If specified the
          change IDs will be reflective of the shared drive; use the combined
          drive ID and change ID as an identifier.
        paramKey: driveId
        in: query
        schema:
          type: string
        required: false
      - paramName: includeCorpusRemovals
        description: Whether changes should include the file resource if the file is
          still accessible by the user at the time of the request, even when a
          file was removed from the list of changes and there will be no further
          change entries for this file.
        paramKey: includeCorpusRemovals
        in: query
        schema:
          type: boolean
        required: false
      - paramName: includeItemsFromAllDrives
        description: Whether both My Drive and shared drive items should be included in
          results.
        paramKey: includeItemsFromAllDrives
        in: query
        schema:
          type: boolean
        required: false
      - paramName: includeLabels
        description: A comma-separated list of IDs of labels to include in the labelInfo
          part of the response.
        paramKey: includeLabels
        in: query
        schema:
          type: string
        required: false
      - paramName: includePermissionsForView
        description: Specifies which additional view's permissions to include in the
          response. Only 'published' is supported.
        paramKey: includePermissionsForView
        in: query
        schema:
          type: string
        required: false
      - paramName: includeRemoved
        description: Whether to include changes indicating that items have been removed
          from the list of changes, for example by deletion or loss of access.
        paramKey: includeRemoved
        in: query
        schema:
          type: boolean
        required: false
      - paramName: pageSize
        description: The maximum number of changes to return per page.
        paramKey: pageSize
        in: query
        schema:
          type: number
          minimum: 1
          maximum: 1000
        required: false
      - paramName: restrictToMyDrive
        description: Whether to restrict the results to changes inside the My Drive
          hierarchy. This omits changes to files such as those in the
          Application Data folder or shared files which have not been added to
          My Drive.
        paramKey: restrictToMyDrive
        in: query
        schema:
          type: boolean
        required: false
      - paramName: spaces
        description: A comma-separated list of spaces to query within the corpora.
          Supported values are 'drive' and 'appDataFolder'.
        paramKey: spaces
        in: query
        schema:
          type: string
        required: false
      - paramName: supportsAllDrives
        description: Whether the requesting application supports both My Drives and
          shared drives.
        paramKey: supportsAllDrives
        in: query
        schema:
          type: boolean
        required: false
      - paramName: address
        description: The address where notifications are delivered for this channel.
        paramKey: address
        in: body
        schema:
          type: string
        required: false
      - paramName: expiration
        description: Date and time of notification channel expiration, expressed as a
          Unix timestamp, in milliseconds. Optional.
        paramKey: expiration
        in: body
        schema:
          type: string
        required: false
      - paramName: id
        description: A UUID or similar unique string that identifies this channel.
        paramKey: id
        in: body
        schema:
          type: string
        required: false
      - paramName: kind
        description: Identifies this as a notification channel used to watch for changes
          to a resource, which is "api#channel".
        paramKey: kind
        in: body
        schema:
          type: string
          default: api#channel
        required: false
      - paramName: params
        description: Additional parameters controlling delivery channel behavior. Optional.
        paramKey: params
        in: body
        schema:
          type: any
        required: false
      - paramName: payload
        description: A Boolean value to indicate whether payload is wanted. Optional.
        paramKey: payload
        in: body
        schema:
          type: boolean
        required: false
      - paramName: resourceId
        description: An opaque ID that identifies the resource being watched on this
          channel. Stable across different API versions.
        paramKey: resourceId
        in: body
        schema:
          type: string
        required: false
      - paramName: resourceUri
        description: A version-specific identifier for the watched resource.
        paramKey: resourceUri
        in: body
        schema:
          type: string
        required: false
      - paramName: token
        description: An arbitrary string delivered to the target address with each
          notification delivered over this channel. Optional.
        paramKey: token
        in: body
        schema:
          type: string
        required: false
      - paramName: type
        description: The type of delivery mechanism used for this channel. Valid values
          are "web_hook" (or "webhook"). Both values refer to a channel where
          Http requests are used to deliver messages.
        paramKey: type
        in: body
        schema:
          type: string
        required: false
    requestBodyType: json
  - moduleName: Channels / Stop
    method: post
    path: /channels/stop
    description: Stop watching resources through this channel
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: address
        description: The address where notifications are delivered for this channel.
        paramKey: address
        in: body
        schema:
          type: string
        required: false
      - paramName: expiration
        description: Date and time of notification channel expiration, expressed as a
          Unix timestamp, in milliseconds. Optional.
        paramKey: expiration
        in: body
        schema:
          type: string
        required: false
      - paramName: id
        description: A UUID or similar unique string that identifies this channel.
        paramKey: id
        in: body
        schema:
          type: string
        required: true
      - paramName: kind
        description: Identifies this as a notification channel used to watch for changes
          to a resource, which is "api#channel".
        paramKey: kind
        in: body
        schema:
          type: string
          default: api#channel
        required: false
      - paramName: params
        description: Additional parameters controlling delivery channel behavior. Optional.
        paramKey: params
        in: body
        schema:
          type: any
        required: false
      - paramName: payload
        description: A Boolean value to indicate whether payload is wanted. Optional.
        paramKey: payload
        in: body
        schema:
          type: boolean
        required: false
      - paramName: resourceId
        description: An opaque ID that identifies the resource being watched on this
          channel. Stable across different API versions.
        paramKey: resourceId
        in: body
        schema:
          type: string
        required: true
      - paramName: resourceUri
        description: A version-specific identifier for the watched resource.
        paramKey: resourceUri
        in: body
        schema:
          type: string
        required: false
      - paramName: token
        description: An arbitrary string delivered to the target address with each
          notification delivered over this channel. Optional.
        paramKey: token
        in: body
        schema:
          type: string
        required: false
      - paramName: type
        description: The type of delivery mechanism used for this channel. Valid values
          are "web_hook" (or "webhook"). Both values refer to a channel where
          Http requests are used to deliver messages.
        paramKey: type
        in: body
        schema:
          type: string
        required: false
    requestBodyType: json
  - moduleName: Shared Drives / List
    method: get
    path: /drives
    description: Lists the user's shared drives.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: pageSize
        description: Maximum number of shared drives to return per page.
        paramKey: pageSize
        in: query
        schema:
          type: number
          minimum: 1
          maximum: 100
        required: false
      - paramName: pageToken
        description: Page token for shared drives.
        paramKey: pageToken
        in: query
        schema:
          type: string
        required: false
      - paramName: q
        description: Query string for searching shared drives.
        paramKey: q
        in: query
        schema:
          type: string
        required: false
      - paramName: useDomainAdminAccess
        description: Issue the request as a domain administrator; if set to true, then
          all shared drives of the domain in which the requester is an
          administrator are returned.
        paramKey: useDomainAdminAccess
        in: query
        schema:
          type: boolean
        required: false
  - moduleName: Shared Drives / Create
    method: post
    path: /drives
    description: Creates a shared drive.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: requestId
        description: An ID, such as a random UUID, which uniquely identifies this user's
          request for idempotent creation of a shared drive. A repeated request
          by the same user and with the same request ID will avoid creating
          duplicates by attempting to create the same shared drive. If the
          shared drive already exists a 409 error will be returned.
        paramKey: requestId
        in: query
        schema:
          type: string
        required: true
      - paramName: backgroundImageFile
        description: An image file and cropping parameters from which a background image
          for this shared drive is set. This is a write-only field; it can only
          be set on drive.drives.update requests that don't set themeId. When
          specified, all fields of the backgroundImageFile must be set.
        paramKey: backgroundImageFile
        in: body
        schema:
          type: any
        required: false
      - paramName: backgroundImageLink
        description: A short-lived link to this shared drive's background image.
        paramKey: backgroundImageLink
        in: body
        schema:
          type: string
        required: false
      - paramName: capabilities
        description: Capabilities the current user has on this shared drive.
        paramKey: capabilities
        in: body
        schema:
          type: any
        required: false
      - paramName: colorRgb
        description: The color of this shared drive as an RGB hex string. It can only be
          set on drive.drives.update requests that don't set themeId.
        paramKey: colorRgb
        in: body
        schema:
          type: string
        required: false
      - paramName: createdTime
        description: The time at which the shared drive was created (RFC 3339 date-time).
        paramKey: createdTime
        in: body
        schema:
          type: string
        required: false
      - paramName: hidden
        description: Whether the shared drive is hidden from default view.
        paramKey: hidden
        in: body
        schema:
          type: boolean
        required: false
      - paramName: id
        description: The ID of this shared drive which is also the ID of the top level
          folder of this shared drive.
        paramKey: id
        in: body
        schema:
          type: string
        required: false
      - paramName: kind
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "drive#drive".'
        paramKey: kind
        in: body
        schema:
          type: string
          default: drive#drive
        required: false
      - paramName: name
        description: The name of this shared drive.
        paramKey: name
        in: body
        schema:
          type: string
        required: true
      - paramName: orgUnitId
        description: The organizational unit of this shared drive. This field is only
          populated on drives.list responses when the useDomainAdminAccess
          parameter is set to true.
        paramKey: orgUnitId
        in: body
        schema:
          type: string
        required: false
      - paramName: restrictions
        description: A set of restrictions that apply to this shared drive or items
          inside this shared drive.
        paramKey: restrictions
        in: body
        schema:
          type: any
        required: false
      - paramName: themeId
        description: The ID of the theme from which the background image and color are
          set. The set of possible driveThemes can be retrieved from a
          drive.about.get response. When not specified on a drive.drives.create
          request, a random theme is chosen from which the background image and
          color are set. This is a write-only field; it can only be set on
          requests that don't set colorRgb or backgroundImageFile.
        paramKey: themeId
        in: body
        schema:
          type: string
        required: false
    requestBodyType: json
  - moduleName: Shared Drives / Delete
    method: delete
    path: /drives/{driveId}
    description: Permanently deletes a shared drive for which the user is an
      organizer. The shared drive cannot contain any untrashed items.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: driveId
        description: The ID of the shared drive.
        paramKey: driveId
        in: path
        schema:
          type: string
        required: true
      - paramName: allowItemDeletion
        description: Whether any items inside the shared drive should also be deleted.
          This option is only supported when useDomainAdminAccess is also set to
          true.
        paramKey: allowItemDeletion
        in: query
        schema:
          type: boolean
        required: false
      - paramName: useDomainAdminAccess
        description: Issue the request as a domain administrator; if set to true, then
          the requester will be granted access if they are an administrator of
          the domain to which the shared drive belongs.
        paramKey: useDomainAdminAccess
        in: query
        schema:
          type: boolean
        required: false
  - moduleName: Shared Drives / Get
    method: get
    path: /drives/{driveId}
    description: Gets a shared drive's metadata by ID.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: driveId
        description: The ID of the shared drive.
        paramKey: driveId
        in: path
        schema:
          type: string
        required: true
      - paramName: useDomainAdminAccess
        description: Issue the request as a domain administrator; if set to true, then
          the requester will be granted access if they are an administrator of
          the domain to which the shared drive belongs.
        paramKey: useDomainAdminAccess
        in: query
        schema:
          type: boolean
        required: false
  - moduleName: Shared Drives / Update
    method: patch
    path: /drives/{driveId}
    description: Updates the metadata for a shared drive.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: driveId
        description: The ID of the shared drive.
        paramKey: driveId
        in: path
        schema:
          type: string
        required: true
      - paramName: useDomainAdminAccess
        description: Issue the request as a domain administrator. If set to true, then
          the requester is granted access if they're an administrator of the
          domain to which the shared drive belongs.
        paramKey: useDomainAdminAccess
        in: query
        schema:
          type: boolean
        required: false
      - paramName: backgroundImageFile
        description: An image file and cropping parameters from which a background image
          for this shared drive is set. This is a write-only field; it can only
          be set on drive.drives.update requests that don't set themeId. When
          specified, all fields of the backgroundImageFile must be set.
        paramKey: backgroundImageFile
        in: body
        schema:
          type: any
        required: false
      - paramName: backgroundImageLink
        description: A short-lived link to this shared drive's background image.
        paramKey: backgroundImageLink
        in: body
        schema:
          type: string
        required: false
      - paramName: capabilities
        description: Capabilities the current user has on this shared drive.
        paramKey: capabilities
        in: body
        schema:
          type: any
        required: false
      - paramName: colorRgb
        description: The color of this shared drive as an RGB hex string. It can only be
          set on drive.drives.update requests that don't set themeId.
        paramKey: colorRgb
        in: body
        schema:
          type: string
        required: false
      - paramName: createdTime
        description: The time at which the shared drive was created (RFC 3339 date-time).
        paramKey: createdTime
        in: body
        schema:
          type: string
        required: false
      - paramName: hidden
        description: Whether the shared drive is hidden from default view.
        paramKey: hidden
        in: body
        schema:
          type: boolean
        required: false
      - paramName: id
        description: The ID of this shared drive which is also the ID of the top level
          folder of this shared drive.
        paramKey: id
        in: body
        schema:
          type: string
        required: false
      - paramName: kind
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "drive#drive".'
        paramKey: kind
        in: body
        schema:
          type: string
          default: drive#drive
        required: false
      - paramName: name
        description: The name of this shared drive.
        paramKey: name
        in: body
        schema:
          type: string
        required: true
      - paramName: orgUnitId
        description: The organizational unit of this shared drive. This field is only
          populated on drives.list responses when the useDomainAdminAccess
          parameter is set to true.
        paramKey: orgUnitId
        in: body
        schema:
          type: string
        required: false
      - paramName: restrictions
        description: A set of restrictions that apply to this shared drive or items
          inside this shared drive.
        paramKey: restrictions
        in: body
        schema:
          type: any
        required: false
      - paramName: themeId
        description: The ID of the theme from which the background image and color are
          set. The set of possible driveThemes can be retrieved from a
          drive.about.get response. When not specified on a drive.drives.create
          request, a random theme is chosen from which the background image and
          color are set. This is a write-only field; it can only be set on
          requests that don't set colorRgb or backgroundImageFile.
        paramKey: themeId
        in: body
        schema:
          type: string
        required: false
    requestBodyType: json
  - moduleName: Shared Drives / Hide
    method: post
    path: /drives/{driveId}/hide
    description: Hides a shared drive from the default view.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: driveId
        description: The ID of the shared drive.
        paramKey: driveId
        in: path
        schema:
          type: string
        required: true
  - moduleName: Shared Drives / Unhide
    method: post
    path: /drives/{driveId}/unhide
    description: Restores a shared drive to the default view.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: driveId
        description: The ID of the shared drive.
        paramKey: driveId
        in: path
        schema:
          type: string
        required: true
  - moduleName: Files / List
    method: get
    path: /files
    description: Lists or searches files.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: corpora
        description: "Groupings of files to which the query applies. Supported groupings
          are: 'user' (files created by, opened by, or shared directly with the
          user), 'drive' (files in the specified shared drive as indicated by
          the 'driveId'), 'domain' (files shared to the user's domain), and
          'allDrives' (A combination of 'user' and 'drive' for all drives where
          the user is a member). When able, use 'user' or 'drive', instead of
          'allDrives', for efficiency."
        paramKey: corpora
        in: query
        schema:
          type: string
        required: false
      - paramName: driveId
        description: ID of the shared drive to search.
        paramKey: driveId
        in: query
        schema:
          type: string
        required: false
      - paramName: includeItemsFromAllDrives
        description: Whether both My Drive and shared drive items should be included in
          results.
        paramKey: includeItemsFromAllDrives
        in: query
        schema:
          type: boolean
        required: false
      - paramName: includeLabels
        description: A comma-separated list of IDs of labels to include in the labelInfo
          part of the response.
        paramKey: includeLabels
        in: query
        schema:
          type: string
        required: false
      - paramName: includePermissionsForView
        description: Specifies which additional view's permissions to include in the
          response. Only 'published' is supported.
        paramKey: includePermissionsForView
        in: query
        schema:
          type: string
        required: false
      - paramName: orderBy
        description: "A comma-separated list of sort keys. Valid keys are 'createdTime',
          'folder', 'modifiedByMeTime', 'modifiedTime', 'name', 'name_natural',
          'quotaBytesUsed', 'recency', 'sharedWithMeTime', 'starred', and
          'viewedByMeTime'. Each key sorts ascending by default, but may be
          reversed with the 'desc' modifier. Example usage:
          ?orderBy=folder,modifiedTime desc,name. Please note that there is a
          current limitation for users with approximately one million files in
          which the requested sort order is ignored."
        paramKey: orderBy
        in: query
        schema:
          type: string
        required: false
      - paramName: pageSize
        description: The maximum number of files to return per page. Partial or empty
          result pages are possible even before the end of the files list has
          been reached.
        paramKey: pageSize
        in: query
        schema:
          type: number
          minimum: 1
          maximum: 1000
        required: false
      - paramName: pageToken
        description: The token for continuing a previous list request on the next page.
          This should be set to the value of 'nextPageToken' from the previous
          response.
        paramKey: pageToken
        in: query
        schema:
          type: string
        required: false
      - paramName: q
        description: A query for filtering the file results. See the "Search for Files"
          guide for supported syntax.
        paramKey: q
        in: query
        schema:
          type: string
        required: false
      - paramName: spaces
        description: A comma-separated list of spaces to query within the corpora.
          Supported values are 'drive' and 'appDataFolder'.
        paramKey: spaces
        in: query
        schema:
          type: string
        required: false
      - paramName: supportsAllDrives
        description: Whether the requesting application supports both My Drives and
          shared drives.
        paramKey: supportsAllDrives
        in: query
        schema:
          type: boolean
        required: false
  - moduleName: Files / Generate IDs
    method: get
    path: /files/generateIds
    description: Generates a set of file IDs which can be provided in create or copy
      requests.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: count
        description: The number of IDs to return.
        paramKey: count
        in: query
        schema:
          type: number
          minimum: 1
          maximum: 1000
        required: false
      - paramName: space
        description: "The space in which the IDs can be used to create new files.
          Supported values are 'drive' and 'appDataFolder'. (Default: 'drive')"
        paramKey: space
        in: query
        schema:
          type: string
        required: false
      - paramName: type
        description: "The type of items which the IDs can be used for. Supported values
          are 'files' and 'shortcuts'. Note that 'shortcuts' are only supported
          in the drive 'space'. (Default: 'files')"
        paramKey: type
        in: query
        schema:
          type: string
        required: false
  - moduleName: Files / Empty Trash
    method: delete
    path: /files/trash
    description: Permanently deletes all of the user's trashed files.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: driveId
        description: If set, empties the trash of the provided shared drive.
        paramKey: driveId
        in: query
        schema:
          type: string
        required: false
      - paramName: enforceSingleParent
        description: Deprecated. If an item is not in a shared drive and its last parent
          is deleted but the item itself is not, the item will be placed under
          its owner's root.
        paramKey: enforceSingleParent
        in: query
        schema:
          type: boolean
        required: false
  - moduleName: Files / Delete
    method: delete
    path: /files/{fileId}
    description: Permanently deletes a file owned by the user without moving it to
      the trash. If the file belongs to a shared drive the user must be an
      organizer on the parent. If the target is a folder, all descendants owned
      by the user are also deleted.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: enforceSingleParent
        description: Deprecated. If an item is not in a shared drive and its last parent
          is deleted but the item itself is not, the item will be placed under
          its owner's root.
        paramKey: enforceSingleParent
        in: query
        schema:
          type: boolean
        required: false
      - paramName: supportsAllDrives
        description: Whether the requesting application supports both My Drives and
          shared drives.
        paramKey: supportsAllDrives
        in: query
        schema:
          type: boolean
        required: false
  - moduleName: Files / Get
    method: get
    path: /files/{fileId}
    description: Gets a file's metadata or content by ID.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: acknowledgeAbuse
        description: Whether the user is acknowledging the risk of downloading known
          malware or other abusive files. This is only applicable when
          alt=media.
        paramKey: acknowledgeAbuse
        in: query
        schema:
          type: boolean
        required: false
      - paramName: includeLabels
        description: A comma-separated list of IDs of labels to include in the labelInfo
          part of the response.
        paramKey: includeLabels
        in: query
        schema:
          type: string
        required: false
      - paramName: includePermissionsForView
        description: Specifies which additional view's permissions to include in the
          response. Only 'published' is supported.
        paramKey: includePermissionsForView
        in: query
        schema:
          type: string
        required: false
      - paramName: supportsAllDrives
        description: Whether the requesting application supports both My Drives and
          shared drives.
        paramKey: supportsAllDrives
        in: query
        schema:
          type: boolean
        required: false
  - moduleName: Comments / List
    method: get
    path: /files/{fileId}/comments
    description: Lists a file's comments.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: true
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: includeDeleted
        description: Whether to include deleted comments. Deleted comments will not
          include their original content.
        paramKey: includeDeleted
        in: query
        schema:
          type: boolean
        required: false
      - paramName: pageSize
        description: The maximum number of comments to return per page.
        paramKey: pageSize
        in: query
        schema:
          type: number
          minimum: 1
          maximum: 100
        required: false
      - paramName: pageToken
        description: The token for continuing a previous list request on the next page.
          This should be set to the value of 'nextPageToken' from the previous
          response.
        paramKey: pageToken
        in: query
        schema:
          type: string
        required: false
      - paramName: startModifiedTime
        description: The minimum value of 'modifiedTime' for the result comments (RFC
          3339 date-time).
        paramKey: startModifiedTime
        in: query
        schema:
          type: string
        required: false
  - moduleName: Comments / Create
    method: post
    path: /files/{fileId}/comments
    description: Creates a comment on a file.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: true
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: anchor
        description: A region of the document represented as a JSON string. For details
          on defining anchor properties, refer to  Add comments and replies.
        paramKey: anchor
        in: body
        schema:
          type: string
        required: false
      - paramName: author
        description: Information about a Drive user.
        paramKey: author
        in: body
        schema:
          type: any
        required: false
      - paramName: content
        description: The plain text content of the comment. This field is used for
          setting the content, while htmlContent should be displayed.
        paramKey: content
        in: body
        schema:
          type: string
        required: true
      - paramName: createdTime
        description: The time at which the comment was created (RFC 3339 date-time).
        paramKey: createdTime
        in: body
        schema:
          type: string
        required: false
      - paramName: deleted
        description: Whether the comment has been deleted. A deleted comment has no content.
        paramKey: deleted
        in: body
        schema:
          type: boolean
        required: false
      - paramName: htmlContent
        description: The content of the comment with HTML formatting.
        paramKey: htmlContent
        in: body
        schema:
          type: string
        required: false
      - paramName: id
        description: The ID of the comment.
        paramKey: id
        in: body
        schema:
          type: string
        required: false
      - paramName: kind
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "drive#comment".'
        paramKey: kind
        in: body
        schema:
          type: string
          default: drive#comment
        required: false
      - paramName: modifiedTime
        description: The last time the comment or any of its replies was modified (RFC
          3339 date-time).
        paramKey: modifiedTime
        in: body
        schema:
          type: string
        required: false
      - paramName: quotedFileContent
        description: The file content to which the comment refers, typically within the
          anchor region. For a text file, for example, this would be the text at
          the location of the comment.
        paramKey: quotedFileContent
        in: body
        schema:
          type: any
        required: false
      - paramName: replies
        description: The full list of replies to the comment in chronological order.
        paramKey: replies
        in: body
        schema:
          type: array
          items:
            type: any
        required: false
      - paramName: resolved
        description: Whether the comment has been resolved by one of its replies.
        paramKey: resolved
        in: body
        schema:
          type: boolean
        required: false
    requestBodyType: json
  - moduleName: Comments / Delete
    method: delete
    path: /files/{fileId}/comments/{commentId}
    description: Deletes a comment.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: commentId
        description: The ID of the comment.
        paramKey: commentId
        in: path
        schema:
          type: string
        required: true
  - moduleName: Comments / Get
    method: get
    path: /files/{fileId}/comments/{commentId}
    description: Gets a comment by ID.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: true
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: commentId
        description: The ID of the comment.
        paramKey: commentId
        in: path
        schema:
          type: string
        required: true
      - paramName: includeDeleted
        description: Whether to return deleted comments. Deleted comments will not
          include their original content.
        paramKey: includeDeleted
        in: query
        schema:
          type: boolean
        required: false
  - moduleName: Comments / Update
    method: patch
    path: /files/{fileId}/comments/{commentId}
    description: Updates a comment with patch semantics.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: true
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: commentId
        description: The ID of the comment.
        paramKey: commentId
        in: path
        schema:
          type: string
        required: true
      - paramName: anchor
        description: A region of the document represented as a JSON string. For details
          on defining anchor properties, refer to  Add comments and replies.
        paramKey: anchor
        in: body
        schema:
          type: string
        required: false
      - paramName: author
        description: Information about a Drive user.
        paramKey: author
        in: body
        schema:
          type: any
        required: false
      - paramName: content
        description: The plain text content of the comment. This field is used for
          setting the content, while htmlContent should be displayed.
        paramKey: content
        in: body
        schema:
          type: string
        required: true
      - paramName: createdTime
        description: The time at which the comment was created (RFC 3339 date-time).
        paramKey: createdTime
        in: body
        schema:
          type: string
        required: false
      - paramName: deleted
        description: Whether the comment has been deleted. A deleted comment has no content.
        paramKey: deleted
        in: body
        schema:
          type: boolean
        required: false
      - paramName: htmlContent
        description: The content of the comment with HTML formatting.
        paramKey: htmlContent
        in: body
        schema:
          type: string
        required: false
      - paramName: id
        description: The ID of the comment.
        paramKey: id
        in: body
        schema:
          type: string
        required: false
      - paramName: kind
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "drive#comment".'
        paramKey: kind
        in: body
        schema:
          type: string
          default: drive#comment
        required: false
      - paramName: modifiedTime
        description: The last time the comment or any of its replies was modified (RFC
          3339 date-time).
        paramKey: modifiedTime
        in: body
        schema:
          type: string
        required: false
      - paramName: quotedFileContent
        description: The file content to which the comment refers, typically within the
          anchor region. For a text file, for example, this would be the text at
          the location of the comment.
        paramKey: quotedFileContent
        in: body
        schema:
          type: any
        required: false
      - paramName: replies
        description: The full list of replies to the comment in chronological order.
        paramKey: replies
        in: body
        schema:
          type: array
          items:
            type: any
        required: false
      - paramName: resolved
        description: Whether the comment has been resolved by one of its replies.
        paramKey: resolved
        in: body
        schema:
          type: boolean
        required: false
    requestBodyType: json
  - moduleName: Replies / List
    method: get
    path: /files/{fileId}/comments/{commentId}/replies
    description: Lists a comment's replies.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: true
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: commentId
        description: The ID of the comment.
        paramKey: commentId
        in: path
        schema:
          type: string
        required: true
      - paramName: includeDeleted
        description: Whether to include deleted replies. Deleted replies will not
          include their original content.
        paramKey: includeDeleted
        in: query
        schema:
          type: boolean
        required: false
      - paramName: pageSize
        description: The maximum number of replies to return per page.
        paramKey: pageSize
        in: query
        schema:
          type: number
          minimum: 1
          maximum: 100
        required: false
      - paramName: pageToken
        description: The token for continuing a previous list request on the next page.
          This should be set to the value of 'nextPageToken' from the previous
          response.
        paramKey: pageToken
        in: query
        schema:
          type: string
        required: false
  - moduleName: Replies / Create
    method: post
    path: /files/{fileId}/comments/{commentId}/replies
    description: Creates a reply to a comment.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: true
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: commentId
        description: The ID of the comment.
        paramKey: commentId
        in: path
        schema:
          type: string
        required: true
      - paramName: action
        description: >-
          The action the reply performed to the parent comment. Valid values
          are:  

          - resolve 

          - reopen
        paramKey: action
        in: body
        schema:
          type: string
        required: false
      - paramName: author
        description: ""
        paramKey: author
        in: body
        schema:
          type: any
        required: false
      - paramName: content
        description: The plain text content of the reply. This field is used for setting
          the content, while htmlContent should be displayed. This is required
          on creates if no action is specified.
        paramKey: content
        in: body
        schema:
          type: string
        required: true
      - paramName: createdTime
        description: The time at which the reply was created (RFC 3339 date-time).
        paramKey: createdTime
        in: body
        schema:
          type: string
        required: false
      - paramName: deleted
        description: Whether the reply has been deleted. A deleted reply has no content.
        paramKey: deleted
        in: body
        schema:
          type: boolean
        required: false
      - paramName: htmlContent
        description: The content of the reply with HTML formatting.
        paramKey: htmlContent
        in: body
        schema:
          type: string
        required: false
      - paramName: id
        description: The ID of the reply.
        paramKey: id
        in: body
        schema:
          type: string
        required: false
      - paramName: kind
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "drive#reply".'
        paramKey: kind
        in: body
        schema:
          type: string
          default: drive#reply
        required: false
      - paramName: modifiedTime
        description: The last time the reply was modified (RFC 3339 date-time).
        paramKey: modifiedTime
        in: body
        schema:
          type: string
        required: false
    requestBodyType: json
  - moduleName: Replies / Delete
    method: delete
    path: /files/{fileId}/comments/{commentId}/replies/{replyId}
    description: Deletes a reply.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: commentId
        description: The ID of the comment.
        paramKey: commentId
        in: path
        schema:
          type: string
        required: true
      - paramName: replyId
        description: The ID of the reply.
        paramKey: replyId
        in: path
        schema:
          type: string
        required: true
  - moduleName: Replies / Get
    method: get
    path: /files/{fileId}/comments/{commentId}/replies/{replyId}
    description: Gets a reply by ID.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: true
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: commentId
        description: The ID of the comment.
        paramKey: commentId
        in: path
        schema:
          type: string
        required: true
      - paramName: replyId
        description: The ID of the reply.
        paramKey: replyId
        in: path
        schema:
          type: string
        required: true
      - paramName: includeDeleted
        description: Whether to return deleted replies. Deleted replies will not include
          their original content.
        paramKey: includeDeleted
        in: query
        schema:
          type: boolean
        required: false
  - moduleName: Replies / Update
    method: patch
    path: /files/{fileId}/comments/{commentId}/replies/{replyId}
    description: Updates a reply with patch semantics.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: true
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: commentId
        description: The ID of the comment.
        paramKey: commentId
        in: path
        schema:
          type: string
        required: true
      - paramName: replyId
        description: The ID of the reply.
        paramKey: replyId
        in: path
        schema:
          type: string
        required: true
      - paramName: action
        description: >-
          The action the reply performed to the parent comment. Valid values
          are:  

          - resolve 

          - reopen
        paramKey: action
        in: body
        schema:
          type: string
        required: false
      - paramName: author
        description: ""
        paramKey: author
        in: body
        schema:
          type: any
        required: false
      - paramName: content
        description: The plain text content of the reply. This field is used for setting
          the content, while htmlContent should be displayed. This is required
          on creates if no action is specified.
        paramKey: content
        in: body
        schema:
          type: string
        required: true
      - paramName: createdTime
        description: The time at which the reply was created (RFC 3339 date-time).
        paramKey: createdTime
        in: body
        schema:
          type: string
        required: false
      - paramName: deleted
        description: Whether the reply has been deleted. A deleted reply has no content.
        paramKey: deleted
        in: body
        schema:
          type: boolean
        required: false
      - paramName: htmlContent
        description: The content of the reply with HTML formatting.
        paramKey: htmlContent
        in: body
        schema:
          type: string
        required: false
      - paramName: id
        description: The ID of the reply.
        paramKey: id
        in: body
        schema:
          type: string
        required: false
      - paramName: kind
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "drive#reply".'
        paramKey: kind
        in: body
        schema:
          type: string
          default: drive#reply
        required: false
      - paramName: modifiedTime
        description: The last time the reply was modified (RFC 3339 date-time).
        paramKey: modifiedTime
        in: body
        schema:
          type: string
        required: false
    requestBodyType: json
  - moduleName: Files / Copy
    method: post
    path: /files/{fileId}/copy
    description: Creates a copy of a file and applies any requested updates with
      patch semantics. Folders cannot be copied.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: enforceSingleParent
        description: Deprecated. Copying files into multiple folders is no longer
          supported. Use shortcuts instead.
        paramKey: enforceSingleParent
        in: query
        schema:
          type: boolean
        required: false
      - paramName: ignoreDefaultVisibility
        description: Whether to ignore the domain's default visibility settings for the
          created file. Domain administrators can choose to make all uploaded
          files visible to the domain by default; this parameter bypasses that
          behavior for the request. Permissions are still inherited from parent
          folders.
        paramKey: ignoreDefaultVisibility
        in: query
        schema:
          type: boolean
        required: false
      - paramName: includeLabels
        description: A comma-separated list of IDs of labels to include in the labelInfo
          part of the response.
        paramKey: includeLabels
        in: query
        schema:
          type: string
        required: false
      - paramName: includePermissionsForView
        description: Specifies which additional view's permissions to include in the
          response. Only 'published' is supported.
        paramKey: includePermissionsForView
        in: query
        schema:
          type: string
        required: false
      - paramName: keepRevisionForever
        description: Whether to set the 'keepForever' field in the new head revision.
          This is only applicable to files with binary content in Google Drive.
          Only 200 revisions for the file can be kept forever. If the limit is
          reached, try deleting pinned revisions.
        paramKey: keepRevisionForever
        in: query
        schema:
          type: boolean
        required: false
      - paramName: ocrLanguage
        description: A language hint for OCR processing during image import (ISO 639-1
          code).
        paramKey: ocrLanguage
        in: query
        schema:
          type: string
        required: false
      - paramName: supportsAllDrives
        description: Whether the requesting application supports both My Drives and
          shared drives.
        paramKey: supportsAllDrives
        in: query
        schema:
          type: boolean
        required: false
      - paramName: appProperties
        description: >-
          A collection of arbitrary key-value pairs that are private to the
          requesting app.

          Entries with null values are cleared in update and copy requests.
          These properties can only be retrieved using an authenticated request.
          An authenticated request uses an access token obtained with an OAuth 2
          client ID. You cannot use an API key to retrieve private properties.
        paramKey: appProperties
        in: body
        schema:
          type: any
        required: false
      - paramName: capabilities
        description: Capabilities the current user has on this file. Each capability
          corresponds to a fine-grained action that a user can take.
        paramKey: capabilities
        in: body
        schema:
          type: any
        required: false
      - paramName: contentHints
        description: Additional information about the content of the file. These fields
          are never populated in responses.
        paramKey: contentHints
        in: body
        schema:
          type: any
        required: false
      - paramName: contentRestrictions
        description: Restrictions for accessing the content of the file. Only populated
          if such a restriction exists.
        paramKey: contentRestrictions
        in: body
        schema:
          type: array
          items:
            type: any
        required: false
      - paramName: copyRequiresWriterPermission
        description: Whether the options to copy, print, or download this file, should
          be disabled for readers and commenters.
        paramKey: copyRequiresWriterPermission
        in: body
        schema:
          type: boolean
        required: false
      - paramName: createdTime
        description: The time at which the file was created (RFC 3339 date-time).
        paramKey: createdTime
        in: body
        schema:
          type: string
        required: false
      - paramName: description
        description: A short description of the file.
        paramKey: description
        in: body
        schema:
          type: string
        required: false
      - paramName: driveId
        description: ID of the shared drive the file resides in. Only populated for
          items in shared drives.
        paramKey: driveId
        in: body
        schema:
          type: string
        required: false
      - paramName: explicitlyTrashed
        description: Whether the file has been explicitly trashed, as opposed to
          recursively trashed from a parent folder.
        paramKey: explicitlyTrashed
        in: body
        schema:
          type: boolean
        required: false
      - paramName: exportLinks
        description: Links for exporting Docs Editors files to specific formats.
        paramKey: exportLinks
        in: body
        schema:
          type: any
        required: false
      - paramName: fileExtension
        description: The final component of fullFileExtension. This is only available
          for files with binary content in Google Drive.
        paramKey: fileExtension
        in: body
        schema:
          type: string
        required: false
      - paramName: folderColorRgb
        description: >-
          The color for a folder or shortcut to a folder as an RGB hex string.
          The supported colors are published in the folderColorPalette field of
          the About resource.

          If an unsupported color is specified, the closest color in the palette
          will be used instead.
        paramKey: folderColorRgb
        in: body
        schema:
          type: string
        required: false
      - paramName: fullFileExtension
        description: >-
          The full file extension extracted from the name field. Can contain
          multiple concatenated extensions, such as "tar.gz". This is only
          available for files with binary content in Google Drive.

          This is automatically updated when the name field changes, however
          it's not cleared if the new name does not contain a valid extension.
        paramKey: fullFileExtension
        in: body
        schema:
          type: string
        required: false
      - paramName: hasAugmentedPermissions
        description: Whether there are permissions directly on this file. This field is
          only populated for items in shared drives.
        paramKey: hasAugmentedPermissions
        in: body
        schema:
          type: boolean
        required: false
      - paramName: hasThumbnail
        description: Whether this file has a thumbnail. This does not indicate whether
          the requesting app has access to the thumbnail. To check access, look
          for the presence of the thumbnailLink field.
        paramKey: hasThumbnail
        in: body
        schema:
          type: boolean
        required: false
      - paramName: headRevisionId
        description: The ID of the file's head revision. This is only available for
          files with binary content in Google Drive.
        paramKey: headRevisionId
        in: body
        schema:
          type: string
        required: false
      - paramName: iconLink
        description: A static, unauthenticated link to the file's icon.
        paramKey: iconLink
        in: body
        schema:
          type: string
        required: false
      - paramName: id
        description: The ID of the file.
        paramKey: id
        in: body
        schema:
          type: string
        required: false
      - paramName: imageMediaMetadata
        description: Additional metadata about image media, if available.
        paramKey: imageMediaMetadata
        in: body
        schema:
          type: any
        required: false
      - paramName: isAppAuthorized
        description: Whether the requesting app created or opened the file.
        paramKey: isAppAuthorized
        in: body
        schema:
          type: boolean
        required: false
      - paramName: kind
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "drive#file".'
        paramKey: kind
        in: body
        schema:
          type: string
          default: drive#file
        required: false
      - paramName: labelInfo
        description: An overview of the labels on the file.
        paramKey: labelInfo
        in: body
        schema:
          type: any
        required: false
      - paramName: lastModifyingUser
        description: ""
        paramKey: lastModifyingUser
        in: body
        schema:
          type: any
        required: false
      - paramName: linkShareMetadata
        description: Contains details about the link URLs that clients are using to
          refer to this item.
        paramKey: linkShareMetadata
        in: body
        schema:
          type: any
        required: false
      - paramName: md5Checksum
        description: The MD5 checksum for the content of the file. This is only
          applicable to files with binary content in Google Drive.
        paramKey: md5Checksum
        in: body
        schema:
          type: string
        required: false
      - paramName: mimeType
        description: >-
          The MIME type of the file.

          Google Drive will attempt to automatically detect an appropriate value
          from uploaded content if no value is provided. The value cannot be
          changed unless a new revision is uploaded.

          If a file is created with a Google Doc MIME type, the uploaded content
          will be imported if possible. The supported import formats are
          published in the About resource.
        paramKey: mimeType
        in: body
        schema:
          type: string
        required: false
      - paramName: modifiedByMe
        description: Whether this user has modified the file.
        paramKey: modifiedByMe
        in: body
        schema:
          type: boolean
        required: false
      - paramName: modifiedByMeTime
        description: The last time the user modified the file (RFC 3339 date-time).
        paramKey: modifiedByMeTime
        in: body
        schema:
          type: string
        required: false
      - paramName: modifiedTime
        description: >-
          The last time anyone modified the file (RFC 3339 date-time).

          Note that setting modifiedTime will also update modifiedByMeTime for
          the user.
        paramKey: modifiedTime
        in: body
        schema:
          type: string
        required: false
      - paramName: name
        description: The name of the file. This isn't necessarily unique within a
          folder. Note that for immutable items such as the top-level folders of
          shared drives, My Drive root folder, and Application Data folder the
          name is constant.
        paramKey: name
        in: body
        schema:
          type: string
        required: false
      - paramName: originalFilename
        description: The original filename of the uploaded content if available, or else
          the original value of the name field. This is only available for files
          with binary content in Google Drive.
        paramKey: originalFilename
        in: body
        schema:
          type: string
        required: false
      - paramName: ownedByMe
        description: Whether the user owns the file. Not populated for items in shared
          drives.
        paramKey: ownedByMe
        in: body
        schema:
          type: boolean
        required: false
      - paramName: owners
        description: The owner of this file. Only certain legacy files might have more
          than one owner. This field isn't populated for items in shared drives.
        paramKey: owners
        in: body
        schema:
          type: array
          items:
            type: any
        required: false
      - paramName: parents
        description: >-
          The IDs of the parent folders that contain the file.

          If not specified as part of a create request, the file will be placed
          directly in the user's My Drive folder. If not specified as part of a
          copy request, the file will inherit any discoverable parents of the
          source file. Update requests must use the addParents and removeParents
          parameters to modify the parents list.
        paramKey: parents
        in: body
        schema:
          type: array
          items:
            type: any
        required: false
      - paramName: permissionIds
        description: List of permission IDs for users with access to this file.
        paramKey: permissionIds
        in: body
        schema:
          type: array
          items:
            type: any
        required: false
      - paramName: permissions
        description: The full list of permissions for the file. This is only available
          if the requesting user can share the file. Not populated for items in
          shared drives.
        paramKey: permissions
        in: body
        schema:
          type: array
          items:
            type: any
        required: false
      - paramName: properties
        description: >-
          A collection of arbitrary key-value pairs that are visible to all
          apps.

          Entries with null values are cleared in update and copy requests.
        paramKey: properties
        in: body
        schema:
          type: any
        required: false
      - paramName: quotaBytesUsed
        description: The number of storage quota bytes used by the file. This includes
          the head revision as well as previous revisions with keepForever
          enabled.
        paramKey: quotaBytesUsed
        in: body
        schema:
          type: string
        required: false
      - paramName: resourceKey
        description: A key needed to access the item via a shared link.
        paramKey: resourceKey
        in: body
        schema:
          type: string
        required: false
      - paramName: sha1Checksum
        description: The SHA1 checksum associated with this file, if available. This
          field is only populated for files with content stored in Google Drive;
          it's not populated for Docs Editors or shortcut files.
        paramKey: sha1Checksum
        in: body
        schema:
          type: string
        required: false
      - paramName: sha256Checksum
        description: The SHA256 checksum associated with this file, if available. This
          field is only populated for files with content stored in Google Drive;
          it's not populated for Docs Editors or shortcut files.
        paramKey: sha256Checksum
        in: body
        schema:
          type: string
        required: false
      - paramName: shared
        description: Whether the file has been shared. Not populated for items in shared
          drives.
        paramKey: shared
        in: body
        schema:
          type: boolean
        required: false
      - paramName: sharedWithMeTime
        description: The time at which the file was shared with the user, if applicable
          (RFC 3339 date-time).
        paramKey: sharedWithMeTime
        in: body
        schema:
          type: string
        required: false
      - paramName: sharingUser
        description: ""
        paramKey: sharingUser
        in: body
        schema:
          type: any
        required: false
      - paramName: shortcutDetails
        description: Shortcut file details. Only populated for shortcut files, which
          have the mimeType field set to application/vnd.google-apps.shortcut.
        paramKey: shortcutDetails
        in: body
        schema:
          type: any
        required: false
      - paramName: size
        description: The size of the file's content in bytes. This field is populated
          for files with binary content stored in Google Drive and for Docs
          Editors files; it's not populated for shortcuts or folders.
        paramKey: size
        in: body
        schema:
          type: string
        required: false
      - paramName: spaces
        description: The list of spaces that contain the file. The currently supported
          values are 'drive', 'appDataFolder' and 'photos'.
        paramKey: spaces
        in: body
        schema:
          type: array
          items:
            type: any
        required: false
      - paramName: starred
        description: Whether the user has starred the file.
        paramKey: starred
        in: body
        schema:
          type: boolean
        required: false
      - paramName: teamDriveId
        description: Deprecated - use driveId instead.
        paramKey: teamDriveId
        in: body
        schema:
          type: string
        required: false
      - paramName: thumbnailLink
        description: A short-lived link to the file's thumbnail, if available. Typically
          lasts on the order of hours. Only populated when the requesting app
          can access the file's content. If the file isn't shared publicly, the
          URL returned in Files.thumbnailLink must be fetched using a
          credentialed request.
        paramKey: thumbnailLink
        in: body
        schema:
          type: string
        required: false
      - paramName: thumbnailVersion
        description: The thumbnail version for use in thumbnail cache invalidation.
        paramKey: thumbnailVersion
        in: body
        schema:
          type: string
        required: false
      - paramName: trashed
        description: Whether the file has been trashed, either explicitly or from a
          trashed parent folder. Only the owner can trash a file. The trashed
          item is excluded from all files.list responses returned for any user
          who does not own the file. However, all users with access to the file
          can see the trashed item metadata in an API response. All users with
          access can copy, download, export, and share the file.
        paramKey: trashed
        in: body
        schema:
          type: boolean
        required: false
      - paramName: trashedTime
        description: The time that the item was trashed (RFC 3339 date-time). Only
          populated for items in shared drives.
        paramKey: trashedTime
        in: body
        schema:
          type: string
        required: false
      - paramName: trashingUser
        description: ""
        paramKey: trashingUser
        in: body
        schema:
          type: any
        required: false
      - paramName: version
        description: A monotonically increasing version number for the file. This
          reflects every change made to the file on the server, even those not
          visible to the user.
        paramKey: version
        in: body
        schema:
          type: string
        required: false
      - paramName: videoMediaMetadata
        description: Additional metadata about video media. This might not be available
          immediately upon upload.
        paramKey: videoMediaMetadata
        in: body
        schema:
          type: any
        required: false
      - paramName: viewedByMe
        description: Whether this user has viewed the file.
        paramKey: viewedByMe
        in: body
        schema:
          type: boolean
        required: false
      - paramName: viewedByMeTime
        description: The last time the user viewed the file (RFC 3339 date-time).
        paramKey: viewedByMeTime
        in: body
        schema:
          type: string
        required: false
      - paramName: viewersCanCopyContent
        description: Deprecated - use copyRequiresWriterPermission instead.
        paramKey: viewersCanCopyContent
        in: body
        schema:
          type: boolean
        required: false
      - paramName: webContentLink
        description: A link for downloading the content of the file in a browser. This
          is only available for files with binary content in Google Drive.
        paramKey: webContentLink
        in: body
        schema:
          type: string
        required: false
      - paramName: webViewLink
        description: A link for opening the file in a relevant Google editor or viewer
          in a browser.
        paramKey: webViewLink
        in: body
        schema:
          type: string
        required: false
      - paramName: writersCanShare
        description: Whether users with only writer permission can modify the file's
          permissions. Not populated for items in shared drives.
        paramKey: writersCanShare
        in: body
        schema:
          type: boolean
        required: false
    requestBodyType: json
  - moduleName: Files / Export
    method: get
    path: /files/{fileId}/export
    description: Exports a Google Workspace document to the requested MIME type and
      returns exported byte content. Note that the exported content is limited
      to 10MB.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: mimeType
        description: The MIME type of the format requested for this export.
        paramKey: mimeType
        in: query
        schema:
          type: string
        required: true
  - moduleName: Files / List Labels
    method: get
    path: /files/{fileId}/listLabels
    description: Lists the labels on a file.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: maxResults
        description: The maximum number of labels to return per page. When not set, this
          defaults to 100.
        paramKey: maxResults
        in: query
        schema:
          type: number
          minimum: 1
          maximum: 100
        required: false
      - paramName: pageToken
        description: The token for continuing a previous list request on the next page.
          This should be set to the value of 'nextPageToken' from the previous
          response.
        paramKey: pageToken
        in: query
        schema:
          type: string
        required: false
  - moduleName: Files / Modify Labels
    method: post
    path: /files/{fileId}/modifyLabels
    description: Modifies the set of labels on a file.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file for which the labels are modified.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: kind
        description: This is always drive#modifyLabelsRequest
        paramKey: kind
        in: body
        schema:
          type: string
          default: drive#modifyLabelsRequest
        required: false
      - paramName: labelModifications
        description: The list of modifications to apply to the labels on the file.
        paramKey: labelModifications
        in: body
        schema:
          type: array
          items:
            type: any
        required: false
    requestBodyType: json
  - moduleName: Permissions / List
    method: get
    path: /files/{fileId}/permissions
    description: Lists a file's or shared drive's permissions.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file or shared drive.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: includePermissionsForView
        description: Specifies which additional view's permissions to include in the
          response. Only 'published' is supported.
        paramKey: includePermissionsForView
        in: query
        schema:
          type: string
        required: false
      - paramName: pageSize
        description: The maximum number of permissions to return per page. When not set
          for files in a shared drive, at most 100 results will be returned.
          When not set for files that are not in a shared drive, the entire list
          will be returned.
        paramKey: pageSize
        in: query
        schema:
          type: number
          minimum: 1
          maximum: 100
        required: false
      - paramName: pageToken
        description: The token for continuing a previous list request on the next page.
          This should be set to the value of 'nextPageToken' from the previous
          response.
        paramKey: pageToken
        in: query
        schema:
          type: string
        required: false
      - paramName: supportsAllDrives
        description: Whether the requesting application supports both My Drives and
          shared drives.
        paramKey: supportsAllDrives
        in: query
        schema:
          type: boolean
        required: false
      - paramName: useDomainAdminAccess
        description: Issue the request as a domain administrator; if set to true, then
          the requester will be granted access if the file ID parameter refers
          to a shared drive and the requester is an administrator of the domain
          to which the shared drive belongs.
        paramKey: useDomainAdminAccess
        in: query
        schema:
          type: boolean
        required: false
  - moduleName: Permissions / Create
    method: post
    path: /files/{fileId}/permissions
    description: Creates a permission for a file or shared drive. For more
      information on creating permissions, see Share files, folders & drives.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file or shared drive.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: emailMessage
        description: A plain text custom message to include in the notification email.
        paramKey: emailMessage
        in: query
        schema:
          type: string
        required: false
      - paramName: enforceSingleParent
        description: Deprecated. See moveToNewOwnersRoot for details.
        paramKey: enforceSingleParent
        in: query
        schema:
          type: boolean
        required: false
      - paramName: moveToNewOwnersRoot
        description: This parameter will only take effect if the item is not in a shared
          drive and the request is attempting to transfer the ownership of the
          item. If set to true, the item will be moved to the new owner's My
          Drive root folder and all prior parents removed. If set to false,
          parents are not changed.
        paramKey: moveToNewOwnersRoot
        in: query
        schema:
          type: boolean
        required: false
      - paramName: sendNotificationEmail
        description: Whether to send a notification email when sharing to users or
          groups. This defaults to true for users and groups, and is not allowed
          for other requests. It must not be disabled for ownership transfers.
        paramKey: sendNotificationEmail
        in: query
        schema:
          type: boolean
        required: false
      - paramName: supportsAllDrives
        description: Whether the requesting application supports both My Drives and
          shared drives.
        paramKey: supportsAllDrives
        in: query
        schema:
          type: boolean
        required: false
      - paramName: transferOwnership
        description: Whether to transfer ownership to the specified user and downgrade
          the current owner to a writer. This parameter is required as an
          acknowledgement of the side effect. File owners can only transfer
          ownership of files existing on My Drive. Files existing in a shared
          drive are owned by the organization that owns that shared drive.
          Ownership transfers are not supported for files and folders in shared
          drives. Organizers of a shared drive can move items from that shared
          drive into their My Drive which transfers the ownership to them.
        paramKey: transferOwnership
        in: query
        schema:
          type: boolean
        required: false
      - paramName: useDomainAdminAccess
        description: Issue the request as a domain administrator; if set to true, then
          the requester will be granted access if the file ID parameter refers
          to a shared drive and the requester is an administrator of the domain
          to which the shared drive belongs.
        paramKey: useDomainAdminAccess
        in: query
        schema:
          type: boolean
        required: false
      - paramName: allowFileDiscovery
        description: Whether the permission allows the file to be discovered through
          search. This is only applicable for permissions of type domain or
          anyone.
        paramKey: allowFileDiscovery
        in: body
        schema:
          type: boolean
        required: false
      - paramName: deleted
        description: Whether the account associated with this permission has been
          deleted. This field only pertains to user and group permissions.
        paramKey: deleted
        in: body
        schema:
          type: boolean
        required: false
      - paramName: displayName
        description: >-
          The "pretty" name of the value of the permission. The following is a
          list of examples for each type of permission:  

          - user - User's full name, as defined for their Google Account, such
          as "Joe Smith." 

          - group - Name of the Google Group, such as "The Company
          Administrators." 

          - domain - String domain name, such as "your-company.com." 

          - anyone - No displayName is present.
        paramKey: displayName
        in: body
        schema:
          type: string
        required: false
      - paramName: domain
        description: >-
          The domain to which this permission refers. The following options are
          currently allowed:  

          - The entire domain, such as "your-company.com." 

          - A target audience, such as "ID.audience.googledomains.com."
        paramKey: domain
        in: body
        schema:
          type: string
        required: false
      - paramName: emailAddress
        description: The email address of the user or group to which this permission refers.
        paramKey: emailAddress
        in: body
        schema:
          type: string
        required: false
      - paramName: expirationTime
        description: >-
          The time at which this permission will expire (RFC 3339 date-time).
          Expiration times have the following restrictions:  

          - They cannot be set on shared drive items. 

          - They can only be set on user and group permissions. 

          - The time must be in the future. 

          - The time cannot be more than one year in the future.
        paramKey: expirationTime
        in: body
        schema:
          type: string
        required: false
      - paramName: id
        description: The ID of this permission. This is a unique identifier for the
          grantee, and is published in User resources as permissionId. IDs
          should be treated as opaque values.
        paramKey: id
        in: body
        schema:
          type: string
        required: false
      - paramName: kind
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "drive#permission".'
        paramKey: kind
        in: body
        schema:
          type: string
          default: drive#permission
        required: false
      - paramName: pendingOwner
        description: Whether the account associated with this permission is a pending
          owner. Only populated for user type permissions for files that aren't
          in a shared drive.
        paramKey: pendingOwner
        in: body
        schema:
          type: boolean
        required: false
      - paramName: permissionDetails
        description: Details of whether the permissions on this shared drive item are
          inherited or are directly on this item. This is an output-only field
          that's present only for shared drive items.
        paramKey: permissionDetails
        in: body
        schema:
          type: array
          items:
            type: any
        required: false
      - paramName: photoLink
        description: A link to the user's profile photo, if available.
        paramKey: photoLink
        in: body
        schema:
          type: string
        required: false
      - paramName: role
        description: >-
          The role granted by this permission. While new values may be supported
          in the future, the following are currently allowed:  

          - owner 

          - organizer 

          - fileOrganizer 

          - writer 

          - commenter 

          - reader
        paramKey: role
        in: body
        schema:
          type: string
        required: true
      - paramName: teamDrivePermissionDetails
        description: Deprecated - use permissionDetails instead.
        paramKey: teamDrivePermissionDetails
        in: body
        schema:
          type: array
          items:
            type: any
        required: false
      - paramName: type
        description: >-
          The type of the grantee. Valid values are:  

          - user 

          - group 

          - domain 

          - anyone  When creating a permission, if type is user or group, you
          must provide an emailAddress for the user or group. When type is
          domain, you must provide a domain. There isn't extra information
          required for the anyone type.
        paramKey: type
        in: body
        schema:
          type: string
        required: true
      - paramName: view
        description: Indicates the view for this permission. Only populated for
          permissions that belong to a view. published is the only supported
          value.
        paramKey: view
        in: body
        schema:
          type: string
        required: false
    requestBodyType: json
  - moduleName: Permissions / Delete
    method: delete
    path: /files/{fileId}/permissions/{permissionId}
    description: Deletes a permission.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file or shared drive.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: permissionId
        description: The ID of the permission.
        paramKey: permissionId
        in: path
        schema:
          type: string
        required: true
      - paramName: supportsAllDrives
        description: Whether the requesting application supports both My Drives and
          shared drives.
        paramKey: supportsAllDrives
        in: query
        schema:
          type: boolean
        required: false
      - paramName: useDomainAdminAccess
        description: Issue the request as a domain administrator; if set to true, then
          the requester will be granted access if the file ID parameter refers
          to a shared drive and the requester is an administrator of the domain
          to which the shared drive belongs.
        paramKey: useDomainAdminAccess
        in: query
        schema:
          type: boolean
        required: false
  - moduleName: Permissions / Get
    method: get
    path: /files/{fileId}/permissions/{permissionId}
    description: Gets a permission by ID.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: permissionId
        description: The ID of the permission.
        paramKey: permissionId
        in: path
        schema:
          type: string
        required: true
      - paramName: supportsAllDrives
        description: Whether the requesting application supports both My Drives and
          shared drives.
        paramKey: supportsAllDrives
        in: query
        schema:
          type: boolean
        required: false
      - paramName: useDomainAdminAccess
        description: Issue the request as a domain administrator; if set to true, then
          the requester will be granted access if the file ID parameter refers
          to a shared drive and the requester is an administrator of the domain
          to which the shared drive belongs.
        paramKey: useDomainAdminAccess
        in: query
        schema:
          type: boolean
        required: false
  - moduleName: Permissions / Update
    method: patch
    path: /files/{fileId}/permissions/{permissionId}
    description: Updates a permission with patch semantics.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file or shared drive.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: permissionId
        description: The ID of the permission.
        paramKey: permissionId
        in: path
        schema:
          type: string
        required: true
      - paramName: removeExpiration
        description: Whether to remove the expiration date.
        paramKey: removeExpiration
        in: query
        schema:
          type: boolean
        required: false
      - paramName: supportsAllDrives
        description: Whether the requesting application supports both My Drives and
          shared drives.
        paramKey: supportsAllDrives
        in: query
        schema:
          type: boolean
        required: false
      - paramName: transferOwnership
        description: Whether to transfer ownership to the specified user and downgrade
          the current owner to a writer. This parameter is required as an
          acknowledgement of the side effect. File owners can only transfer
          ownership of files existing on My Drive. Files existing in a shared
          drive are owned by the organization that owns that shared drive.
          Ownership transfers are not supported for files and folders in shared
          drives. Organizers of a shared drive can move items from that shared
          drive into their My Drive which transfers the ownership to them.
        paramKey: transferOwnership
        in: query
        schema:
          type: boolean
        required: false
      - paramName: useDomainAdminAccess
        description: Issue the request as a domain administrator; if set to true, then
          the requester will be granted access if the file ID parameter refers
          to a shared drive and the requester is an administrator of the domain
          to which the shared drive belongs.
        paramKey: useDomainAdminAccess
        in: query
        schema:
          type: boolean
        required: false
      - paramName: allowFileDiscovery
        description: Whether the permission allows the file to be discovered through
          search. This is only applicable for permissions of type domain or
          anyone.
        paramKey: allowFileDiscovery
        in: body
        schema:
          type: boolean
        required: false
      - paramName: deleted
        description: Whether the account associated with this permission has been
          deleted. This field only pertains to user and group permissions.
        paramKey: deleted
        in: body
        schema:
          type: boolean
        required: false
      - paramName: displayName
        description: >-
          The "pretty" name of the value of the permission. The following is a
          list of examples for each type of permission:  

          - user - User's full name, as defined for their Google Account, such
          as "Joe Smith." 

          - group - Name of the Google Group, such as "The Company
          Administrators." 

          - domain - String domain name, such as "your-company.com." 

          - anyone - No displayName is present.
        paramKey: displayName
        in: body
        schema:
          type: string
        required: false
      - paramName: domain
        description: >-
          The domain to which this permission refers. The following options are
          currently allowed:  

          - The entire domain, such as "your-company.com." 

          - A target audience, such as "ID.audience.googledomains.com."
        paramKey: domain
        in: body
        schema:
          type: string
        required: false
      - paramName: emailAddress
        description: The email address of the user or group to which this permission refers.
        paramKey: emailAddress
        in: body
        schema:
          type: string
        required: false
      - paramName: expirationTime
        description: >-
          The time at which this permission will expire (RFC 3339 date-time).
          Expiration times have the following restrictions:  

          - They cannot be set on shared drive items. 

          - They can only be set on user and group permissions. 

          - The time must be in the future. 

          - The time cannot be more than one year in the future.
        paramKey: expirationTime
        in: body
        schema:
          type: string
        required: false
      - paramName: id
        description: The ID of this permission. This is a unique identifier for the
          grantee, and is published in User resources as permissionId. IDs
          should be treated as opaque values.
        paramKey: id
        in: body
        schema:
          type: string
        required: false
      - paramName: kind
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "drive#permission".'
        paramKey: kind
        in: body
        schema:
          type: string
          default: drive#permission
        required: false
      - paramName: pendingOwner
        description: Whether the account associated with this permission is a pending
          owner. Only populated for user type permissions for files that aren't
          in a shared drive.
        paramKey: pendingOwner
        in: body
        schema:
          type: boolean
        required: false
      - paramName: permissionDetails
        description: Details of whether the permissions on this shared drive item are
          inherited or are directly on this item. This is an output-only field
          that's present only for shared drive items.
        paramKey: permissionDetails
        in: body
        schema:
          type: array
          items:
            type: any
        required: false
      - paramName: photoLink
        description: A link to the user's profile photo, if available.
        paramKey: photoLink
        in: body
        schema:
          type: string
        required: false
      - paramName: role
        description: >-
          The role granted by this permission. While new values may be supported
          in the future, the following are currently allowed:  

          - owner 

          - organizer 

          - fileOrganizer 

          - writer 

          - commenter 

          - reader
        paramKey: role
        in: body
        schema:
          type: string
        required: true
      - paramName: teamDrivePermissionDetails
        description: Deprecated - use permissionDetails instead.
        paramKey: teamDrivePermissionDetails
        in: body
        schema:
          type: array
          items:
            type: any
        required: false
      - paramName: type
        description: >-
          The type of the grantee. Valid values are:  

          - user 

          - group 

          - domain 

          - anyone  When creating a permission, if type is user or group, you
          must provide an emailAddress for the user or group. When type is
          domain, you must provide a domain. There isn't extra information
          required for the anyone type.
        paramKey: type
        in: body
        schema:
          type: string
        required: false
      - paramName: view
        description: Indicates the view for this permission. Only populated for
          permissions that belong to a view. published is the only supported
          value.
        paramKey: view
        in: body
        schema:
          type: string
        required: false
    requestBodyType: json
  - moduleName: Revisions / List
    method: get
    path: /files/{fileId}/revisions
    description: Lists a file's revisions.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: pageSize
        description: The maximum number of revisions to return per page.
        paramKey: pageSize
        in: query
        schema:
          type: number
          minimum: 1
          maximum: 1000
        required: false
      - paramName: pageToken
        description: The token for continuing a previous list request on the next page.
          This should be set to the value of 'nextPageToken' from the previous
          response.
        paramKey: pageToken
        in: query
        schema:
          type: string
        required: false
  - moduleName: Revisions / Delete
    method: delete
    path: /files/{fileId}/revisions/{revisionId}
    description: Permanently deletes a file version. You can only delete revisions
      for files with binary content in Google Drive, like images or videos.
      Revisions for other files, like Google Docs or Sheets, and the last
      remaining file version can't be deleted.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: revisionId
        description: The ID of the revision.
        paramKey: revisionId
        in: path
        schema:
          type: string
        required: true
  - moduleName: Revisions / Get
    method: get
    path: /files/{fileId}/revisions/{revisionId}
    description: Gets a revision's metadata or content by ID.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: revisionId
        description: The ID of the revision.
        paramKey: revisionId
        in: path
        schema:
          type: string
        required: true
      - paramName: acknowledgeAbuse
        description: Whether the user is acknowledging the risk of downloading known
          malware or other abusive files. This is only applicable when
          alt=media.
        paramKey: acknowledgeAbuse
        in: query
        schema:
          type: boolean
        required: false
  - moduleName: Revisions / Update
    method: patch
    path: /files/{fileId}/revisions/{revisionId}
    description: Updates a revision with patch semantics.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: revisionId
        description: The ID of the revision.
        paramKey: revisionId
        in: path
        schema:
          type: string
        required: true
      - paramName: exportLinks
        description: Links for exporting Docs Editors files to specific formats.
        paramKey: exportLinks
        in: body
        schema:
          type: any
        required: false
      - paramName: id
        description: The ID of the revision.
        paramKey: id
        in: body
        schema:
          type: string
        required: false
      - paramName: keepForever
        description: >-
          Whether to keep this revision forever, even if it is no longer the
          head revision. If not set, the revision will be automatically purged
          30 days after newer content is uploaded. This can be set on a maximum
          of 200 revisions for a file.

          This field is only applicable to files with binary content in Drive.
        paramKey: keepForever
        in: body
        schema:
          type: boolean
        required: false
      - paramName: kind
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "drive#revision".'
        paramKey: kind
        in: body
        schema:
          type: string
          default: drive#revision
        required: false
      - paramName: lastModifyingUser
        description: Information about a Drive user.
        paramKey: lastModifyingUser
        in: body
        schema:
          type: any
        required: false
      - paramName: md5Checksum
        description: The MD5 checksum of the revision's content. This is only applicable
          to files with binary content in Drive.
        paramKey: md5Checksum
        in: body
        schema:
          type: string
        required: false
      - paramName: mimeType
        description: The MIME type of the revision.
        paramKey: mimeType
        in: body
        schema:
          type: string
        required: false
      - paramName: modifiedTime
        description: The last time the revision was modified (RFC 3339 date-time).
        paramKey: modifiedTime
        in: body
        schema:
          type: string
        required: false
      - paramName: originalFilename
        description: The original filename used to create this revision. This is only
          applicable to files with binary content in Drive.
        paramKey: originalFilename
        in: body
        schema:
          type: string
        required: false
      - paramName: publishAuto
        description: Whether subsequent revisions will be automatically republished.
          This is only applicable to Docs Editors files.
        paramKey: publishAuto
        in: body
        schema:
          type: boolean
        required: false
      - paramName: published
        description: Whether this revision is published. This is only applicable to Docs
          Editors files.
        paramKey: published
        in: body
        schema:
          type: boolean
        required: false
      - paramName: publishedLink
        description: A link to the published revision. This is only populated for Google
          Sites files.
        paramKey: publishedLink
        in: body
        schema:
          type: string
        required: false
      - paramName: publishedOutsideDomain
        description: Whether this revision is published outside the domain. This is only
          applicable to Docs Editors files.
        paramKey: publishedOutsideDomain
        in: body
        schema:
          type: boolean
        required: false
      - paramName: size
        description: The size of the revision's content in bytes. This is only
          applicable to files with binary content in Drive.
        paramKey: size
        in: body
        schema:
          type: string
        required: false
    requestBodyType: json
  - moduleName: Files / Watch
    method: post
    path: /files/{fileId}/watch
    description: Subscribes to changes to a file.
    externalDocs: "https://developers.google.com/drive/api/reference/rest/v3"
    params:
      - paramName: alt
        description: Data format for the response.
        paramKey: alt
        in: query
        schema:
          type: string
          enum:
            - json
        required: false
      - paramName: fields
        description: Selector specifying which fields to include in a partial response.
        paramKey: fields
        in: query
        schema:
          type: string
        required: false
      - paramName: quotaUser
        description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        paramKey: quotaUser
        in: query
        schema:
          type: string
        required: false
      - paramName: fileId
        description: The ID of the file.
        paramKey: fileId
        in: path
        schema:
          type: string
        required: true
      - paramName: acknowledgeAbuse
        description: Whether the user is acknowledging the risk of downloading known
          malware or other abusive files. This is only applicable when
          alt=media.
        paramKey: acknowledgeAbuse
        in: query
        schema:
          type: boolean
        required: false
      - paramName: includeLabels
        description: A comma-separated list of IDs of labels to include in the labelInfo
          part of the response.
        paramKey: includeLabels
        in: query
        schema:
          type: string
        required: false
      - paramName: includePermissionsForView
        description: Specifies which additional view's permissions to include in the
          response. Only 'published' is supported.
        paramKey: includePermissionsForView
        in: query
        schema:
          type: string
        required: false
      - paramName: supportsAllDrives
        description: Whether the requesting application supports both My Drives and
          shared drives.
        paramKey: supportsAllDrives
        in: query
        schema:
          type: boolean
        required: false
      - paramName: address
        description: The address where notifications are delivered for this channel.
        paramKey: address
        in: body
        schema:
          type: string
        required: true
      - paramName: expiration
        description: Date and time of notification channel expiration, expressed as a
          Unix timestamp, in milliseconds. Optional.
        paramKey: expiration
        in: body
        schema:
          type: string
        required: false
      - paramName: id
        description: A UUID or similar unique string that identifies this channel.
        paramKey: id
        in: body
        schema:
          type: string
        required: true
      - paramName: kind
        description: Identifies this as a notification channel used to watch for changes
          to a resource, which is "api#channel".
        paramKey: kind
        in: body
        schema:
          type: string
          default: api#channel
        required: false
      - paramName: params
        description: Additional parameters controlling delivery channel behavior. Optional.
        paramKey: params
        in: body
        schema:
          type: any
        required: false
      - paramName: payload
        description: A Boolean value to indicate whether payload is wanted. Optional.
        paramKey: payload
        in: body
        schema:
          type: boolean
        required: false
      - paramName: resourceId
        description: An opaque ID that identifies the resource being watched on this
          channel. Stable across different API versions.
        paramKey: resourceId
        in: body
        schema:
          type: string
        required: false
      - paramName: resourceUri
        description: A version-specific identifier for the watched resource.
        paramKey: resourceUri
        in: body
        schema:
          type: string
        required: false
      - paramName: token
        description: An arbitrary string delivered to the target address with each
          notification delivered over this channel. Optional.
        paramKey: token
        in: body
        schema:
          type: string
        required: false
      - paramName: type
        description: The type of delivery mechanism used for this channel. Valid values
          are "web_hook" (or "webhook"). Both values refer to a channel where
          Http requests are used to deliver messages.
        paramKey: type
        in: body
        schema:
          type: string
        required: true
    requestBodyType: json
